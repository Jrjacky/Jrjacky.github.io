<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DTOJ Begin4028&amp;DTOJ3603 table</title>
    <url>/2019/09/22/DTOJ%20Begin4028%20&amp;DTOJ3603%20table/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><code>C</code> 酱有一个$m \times n$的数表，行与列的编号都从$1$开始。令$f_{i,j}$表示表格第$i$行第$j$列内的数，那么对于表格的第$i(i&gt;1)$行有</p>
<script type="math/tex; mode=display">\begin{cases}f_{i,1}=a \times f_{i-1,1}\\f_{i,j}=a\times f_{i-1,j}+b\times f_{i-1,j-1}\end{cases}</script><p>然而 <code>C</code> 酱已经把表格中的数忘得差不多了，他现在只记得第$p$行的数。他希望你能够帮忙还原出部分位置的数值。</p>
<a id="more"></a>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入第一行为$6$个整数$m,n,a,b,p,q$，其中$q$表示询问的个数。  </p>
<p>接下来一行共$n$个整数，依次表示$f_{p,1},f_{p,2},\cdots,f_{p,n}$。  </p>
<p>接下来$q$行，每行两个整数$x,y$，表示 <code>C</code> 酱询问你$f_{x,y}$的数值。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出共$q$行，依次表示每个询问的答案在模$998244353$意义下的取值。  </p>
<p>即设答案可以表示为分式$\frac{a}{b}$ ，则输出整数$x$使得$b \times x \equiv a \pmod {998244353}$且$0  \leqslant x &lt; 998244353$。可以证明这样的整数$x$是唯一的。</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 1"></a>样例输入 1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 4 1 1 3 5</span><br><span class="line">1 0 0 0</span><br><span class="line">5 2</span><br><span class="line">3 1</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">4 3</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 1"></a>样例输出 1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br><span class="line">998244351</span><br><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure>
<h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入 2"></a>样例输入 2</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 5 233 2333 6 4</span><br><span class="line">9 3 1 0 10</span><br><span class="line">1 5</span><br><span class="line">10 2</span><br><span class="line">5 3</span><br><span class="line">8 1</span><br></pre></td></tr></table></figure>
<h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出 2"></a>样例输出 2</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">110343631</span><br><span class="line">118211750</span><br><span class="line">770559638</span><br><span class="line">488601</span><br></pre></td></tr></table></figure>
<h2 id="数据范围与提示"><a href="#数据范围与提示" class="headerlink" title="数据范围与提示"></a>数据范围与提示</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">测试点编号</th>
<th style="text-align:center">$n$</th>
<th style="text-align:center">$m$</th>
<th style="text-align:center">$a,b$</th>
<th style="text-align:center">$p$</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$1,2$</td>
<td style="text-align:center">$\leqslant 100$</td>
<td style="text-align:center">$\leqslant 10^5$</td>
<td style="text-align:center">−</td>
<td style="text-align:center">$p=1$</td>
</tr>
<tr>
<td style="text-align:center">$3,4$</td>
<td style="text-align:center">$\leqslant 100$</td>
<td style="text-align:center">$\leqslant 10^5$</td>
<td style="text-align:center">$a=b=1$</td>
<td style="text-align:center">−</td>
</tr>
<tr>
<td style="text-align:center">$5,6,7,8$</td>
<td style="text-align:center">$\leqslant 100$</td>
<td style="text-align:center">$\leqslant 10^5$</td>
<td style="text-align:center">−</td>
<td style="text-align:center">−</td>
</tr>
<tr>
<td style="text-align:center">$9,10,11,12$</td>
<td style="text-align:center">$\leqslant 10^5$</td>
<td style="text-align:center">$\leqslant 10^5$</td>
<td style="text-align:center">−</td>
<td style="text-align:center">$p=1$</td>
</tr>
<tr>
<td style="text-align:center">$13,14,15,16$</td>
<td style="text-align:center">$\leqslant 10^5$</td>
<td style="text-align:center">$\leqslant 10^5$</td>
<td style="text-align:center">−</td>
<td style="text-align:center">$p=m$</td>
</tr>
<tr>
<td style="text-align:center">$17,18,19,20$</td>
<td style="text-align:center">$\leqslant 10^5$</td>
<td style="text-align:center">$\leqslant 10^7$</td>
<td style="text-align:center">−</td>
<td style="text-align:center">−</td>
</tr>
</tbody>
</table>
</div>
<p>对于$100\%$的数据，保证$1 \leqslant q \leqslant 100 , 1 \leqslant x , p \leqslant m , 1 \leqslant y \leqslant n , 1 \leqslant a,b &lt; 998244353,0 \leqslant f_{i,j} &lt; 998244353$。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="40分算法"><a href="#40分算法" class="headerlink" title="40分算法"></a>40分算法</h2><p>暴力把所有格子算出来<br>代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m,n,a,b,p,q;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ny,f[<span class="number">100010</span>][<span class="number">110</span>],MOD=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">POW</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans*a)%MOD;</span><br><span class="line">        a=(a*a)%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n&gt;&gt;a&gt;&gt;b&gt;&gt;p&gt;&gt;q;</span><br><span class="line">    ny=POW(a,MOD<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;f[p][i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=p+<span class="number">1</span>;i&lt;=m;i++) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) f[i][j]=((a*f[i<span class="number">-1</span>][j])%MOD+(b*f[i<span class="number">-1</span>][j<span class="number">-1</span>])%MOD)%MOD;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=p<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) f[i][j]=(((f[i+<span class="number">1</span>][j]-(b*f[i][j<span class="number">-1</span>])%MOD)%MOD*ny)%MOD+MOD)%MOD;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x,y;i&lt;=q;i++) <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y,<span class="built_in">cout</span>&lt;&lt;f[x][y]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="AC算法"><a href="#AC算法" class="headerlink" title="AC算法"></a>AC算法</h1><p>我们先分类讨论，在第$p$行下和在第$p$行上<br>若在第$p$行下，我们可以由上面的两个点得出下面一个点<br><img src="https://img-blog.csdnimg.cn/20190922124118645.png" alt=""><br>由题目可知，$f_{i,j}=a\times f_{i-1,j}+b\times f_{i-1,j-1}$</p>
<p>所以，我们考虑第$p$行中，要求的点$(x,y)$左侧的点$(p,i)$（即$i\leqslant y$），它对$(x,y)$的贡献就是$(p,i)$到$(x,y)$的路径条数（只能向右下或向下走）$\times a^{\cdots}\times b^{\cdots}$</p>
<p>我们只需要求$(p,i)$到$(x,y)$的路径条数和$a$、$b$的次数</p>
<p>假设$n=x-p,m=y-i$，那么，我们可以知道我们一共需要走$n$步，向右下走$m$步，所以路径数就是$C^m_n$</p>
<p>所以最终的结果就是：$C^m_n\times a^{n-m}\times b^{m}$<br><img src="https://img-blog.csdnimg.cn/20190922125117710.png" alt=""><br>所以我们还能得到一个范围：$n\geqslant m$<br>终于，我们解决了$(x,y)$在在$p$行下，即$x&gt;p$的情况，接下来，我们讨论一下$x&lt;p$的情况</p>
<p>同样，我们可以通过下面的和他左边的点得到这个位置的值，$f_{i,j}=\frac{f_{i+1,j}}{a}-\frac{b\times f_{i,j-1}}{a}$，那么，问题就变成考虑第$p$行中，要求的点$(x,y)$左侧的点$(p,i)$（即$i\leqslant y$），它对$(x,y)$的贡献就是$(p,i)$到$(x,y)$的路径条数（只能向上或右走）$\times a^{\cdots}\times \left(-\frac{b}{a}\right)^{\cdots}$</p>
<p>同样假设$n=p-x,m=y-i$，但是，不一样的地方在于第一步必须向上走！所以，我们可以知道去掉先向上走的一步后，一共需要走$n+m-1$步，向右走$m$步，所以路径数就是$C^m_{n+m-1}$</p>
<p>所以最终的结果就是：$C^m_{n+m-1}\times a^{n}\times \left(-\frac{b}{a}\right)^{m}$</p>
<p><img src="https://img-blog.csdnimg.cn/20190922131247325.png" alt=""></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ol>
<li>取模</li>
<li>阶乘的逆元可以反着算，$invjc_i=invjc_{i+1}*(i+1)$，这样就避免了多次的$pow$</li>
<li>提前保存$a$的逆元</li>
<li>提前保存$-\frac{b}{a}$的次方，避免计算$-1^{y-i}$</li>
<li>$x&lt;p$的情况中，是$C^m_{n+m-1}$<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,p,q;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,MOD=<span class="number">998244353</span>,f[<span class="number">10100010</span>],jc[<span class="number">10100010</span>],cj[<span class="number">10100010</span>],pa[<span class="number">10100010</span>],pb[<span class="number">10100010</span>],ap[<span class="number">10100010</span>],bp[<span class="number">10100010</span>];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">f：第p行的值</span></span><br><span class="line"><span class="comment">jc：阶乘</span></span><br><span class="line"><span class="comment">cj：阶乘的逆元</span></span><br><span class="line"><span class="comment">pa：a的次方</span></span><br><span class="line"><span class="comment">pb：b的次方</span></span><br><span class="line"><span class="comment">ap：pa的逆元</span></span><br><span class="line"><span class="comment">bp：-b/a的次方 </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">POW</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span><span class="comment">//快速幂 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans*a)%MOD;</span><br><span class="line">        a=(a*a)%MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//求组合数 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>||y&lt;<span class="number">0</span>||y&gt;x) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> jc[x]*cj[y]%MOD*cj[x-y]%MOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n&gt;&gt;a&gt;&gt;b&gt;&gt;p&gt;&gt;q;</span><br><span class="line">    jc[<span class="number">0</span>]=pa[<span class="number">0</span>]=pb[<span class="number">0</span>]=ap[<span class="number">0</span>]=bp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10100000</span>;i++) jc[i]=jc[i<span class="number">-1</span>]*i%MOD;<span class="comment">//暴力求阶乘 </span></span><br><span class="line">    cj[<span class="number">10100000</span>]=POW(jc[<span class="number">10100000</span>],MOD<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10099999</span>;i&gt;=<span class="number">0</span>;i--) cj[i]=cj[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%MOD;<span class="comment">//反向求阶乘的逆元 </span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> na=POW(a,MOD<span class="number">-2</span>),nb=MOD-(b*na%MOD);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10100000</span>;i++) pa[i]=pa[i<span class="number">-1</span>]*a%MOD,pb[i]=pb[i<span class="number">-1</span>]*b%MOD,ap[i]=ap[i<span class="number">-1</span>]*na%MOD,bp[i]=bp[i<span class="number">-1</span>]*nb%MOD; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;f[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x,y;i&lt;=q;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">if</span>(x==p)&#123;<span class="built_in">cout</span>&lt;&lt;f[y]&lt;&lt;<span class="built_in">endl</span>;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x&gt;p)&#123;<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=y;j++) <span class="keyword">if</span>(y-j&lt;=x-p) ans=(ans+f[j]*C(x-p,y-j)%MOD*pa[x-y-p+j]%MOD*pb[y-j]%MOD)%MOD;&#125;</span><br><span class="line">        <span class="comment">//括号很重要！不能删除 </span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=y;j++) ans=(ans+f[j]*C(y-x+p-j<span class="number">-1</span>,y-j)%MOD*ap[p-x]%MOD*bp[y-j]%MOD)%MOD;</span><br><span class="line">        <span class="comment">//分类讨论 </span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>信息竞赛</category>
      </categories>
      <tags>
        <tag>题解</tag>
        <tag>DTOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>微积分基础之求导</title>
    <url>/2019/08/01/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%B1%82%E5%AF%BC/</url>
    <content><![CDATA[<h1 id="1、导数的定义"><a href="#1、导数的定义" class="headerlink" title="1、导数的定义"></a>1、导数的定义</h1><p>导数，又名导函数值，是微积分中的重要基础概念。<a id="more"></a>当函数$y=f(x)$的自变量$x$在一点$x_0$处产生一个增量$\Delta x$时，函数输出值的增量$\Delta y$与自变量增量$\Delta x$的比值在$\Delta x$趋于$0$时的极限$a$如果存在，$a$即为在x0处的导数，记作$f’(x_0)$或$\frac{df(x_0)}{dx}$。导数的几何意义为：$f’(x)$表示函数曲线在点$(x,f(x))$处的切线的斜率。——百度百科（有删改）</p>
<h1 id="2、导数的运算"><a href="#2、导数的运算" class="headerlink" title="2、导数的运算"></a>2、导数的运算</h1><p>从导数的定义我们可以看出$f’(x)=\lim \limits_{\Delta x\rightarrow0}\frac{f(x+\Delta x)-f(x)}{\Delta x}$<br>所以我们可以从这个式子出发，得出导数的四则运算</p>
<h2 id="1-加（减）法"><a href="#1-加（减）法" class="headerlink" title="(1)加（减）法"></a>(1)加（减）法</h2><p>$(f(x)\pm g(x))’=\lim \limits_{\Delta x\rightarrow0}\frac{(f(x+\Delta x)\pm g(x+\Delta x))-(f(x)\pm g(x))}{\Delta x}=\lim \limits_{\Delta x\rightarrow0}\frac{f(x+\Delta x)-f(x)}{\Delta x}\pm\lim \limits_{\Delta x\rightarrow0}\frac{g(x+\Delta x)-g(x)}{\Delta x}=f’(x)\pm g’(x)$</p>
<h2 id="2-乘法"><a href="#2-乘法" class="headerlink" title="(2)乘法"></a>(2)乘法</h2><p>$(f(x)\times g(x))’=\lim \limits_{\Delta x\rightarrow0}\frac{f(x+\Delta x)\times g(x+\Delta x)-f(x)\times g(x)}{\Delta x}=\lim \limits_{\Delta x\rightarrow0}\frac{f(x+\Delta x)\times g(x+\Delta x)-f(x+\Delta x)\times g(x)+f(x+\Delta x)\times g(x)-f(x)\times g(x)}{\Delta x}=\lim \limits_{\Delta x\rightarrow0}\frac{f(x+\Delta x)\times(g(x+\Delta x)-g(x))+(f(x+\Delta x)-f(x))\times g(x)}{\Delta x}=f(x)\times\lim \limits_{\Delta x\rightarrow0}\frac{g(x+\Delta x)-g(x)}{\Delta x}+g(x)\times\lim \limits_{\Delta x\rightarrow0}\frac{f(x+\Delta x)-f(x)}{\Delta x}=f(x)\times g’(x)+f’(x)\times g(x)$</p>
<h2 id="3-除法"><a href="#3-除法" class="headerlink" title="(3)除法"></a>(3)除法</h2><p>$f’(x)=\left(\left(\frac{f(x)}{g(x)}\right)\times g(x)\right)’=\left(\frac{f(x)}{g(x)}\right)’\times g(x)+\left(\frac{f(x)}{g(x)}\right)\times g’(x)$<br>$\therefore \left(\frac{f(x)}{g(x)}\right)’=\frac{f’(x)-\left(\frac{f(x)\times g’(x)}{g(x)}\right)}{g(x)}=\frac{f’(x)g(x)-f(x)g’(x)}{g^2(x)}$</p>
<hr>
<p>除了四则运算之外，还有一些其他的运算</p>
<h2 id="4-复合函数求导"><a href="#4-复合函数求导" class="headerlink" title="(4)复合函数求导"></a>(4)复合函数求导</h2><p>$(f(g(x)))’=\lim \limits_{\Delta x\rightarrow0}\frac{f(g(x+\Delta x))-f(g(x))}{\Delta x}=\lim \limits_{\Delta x\rightarrow0}\frac{f(g(x+\Delta x))-f(g(x))}{g(x+\Delta x)-g(x)}\times\lim \limits_{\Delta x\rightarrow0}\frac{g(x+\Delta x)-g(x)}{\Delta x}=f’(g(x))\times g’(x)$</p>
<h2 id="5-反函数求导"><a href="#5-反函数求导" class="headerlink" title="(5)反函数求导"></a>(5)反函数求导</h2><p>设$f^{-1}(x)=g(x)$<br>$g’(x)=\lim \limits_{\Delta x\rightarrow0}\frac{g(x+\Delta x)-g(x)}{\Delta x}=\lim \limits_{\Delta x\rightarrow0}\frac{1}{\frac{\Delta x}{g(x+\Delta x)-g(x)}}=\lim \limits_{\Delta x\rightarrow0}\frac{1}{\frac{f(g(x+\Delta x))-f(g(x))}{g(x+\Delta x)-g(x)}}=\frac{1}{f’(g(x))}$</p>
<h1 id="3、基本初等函数求导"><a href="#3、基本初等函数求导" class="headerlink" title="3、基本初等函数求导"></a>3、基本初等函数求导</h1><p>这里列出$6$大基本初等函数的导数，证明过程就省略了<del>原因是LaTeX太难打了</del>，幂函数稍微难一点，其他的都是用定义证明，具体的证明过程可以在网上搜索</p>
<h2 id="1-常数函数"><a href="#1-常数函数" class="headerlink" title="(1)常数函数"></a>(1)常数函数</h2><p>$f(x)=C$，$C$为常数<br>$f’(x)=0$</p>
<h2 id="2-幂函数"><a href="#2-幂函数" class="headerlink" title="(2)幂函数"></a>(2)幂函数</h2><p>$f(x)=x^a$<br>$f’(x)=ax^{a-1}$</p>
<h2 id="3-指数函数"><a href="#3-指数函数" class="headerlink" title="(3)指数函数"></a>(3)指数函数</h2><p>$f(x)=a^x(a\in\R^+)$<br>$f’(x)=a^xlna$</p>
<h2 id="4-对数函数"><a href="#4-对数函数" class="headerlink" title="(4)对数函数"></a>(4)对数函数</h2><p>$f(x)=log_ax(a\in\Z^+,a\ne 1)$<br>$f’(x)=\frac{1}{xlna}$</p>
<h2 id="5-三角函数"><a href="#5-三角函数" class="headerlink" title="(5)三角函数"></a>(5)三角函数</h2><p>$f(x)=sinx,g(x)=cosx,h(x)=tanx$<br>$f’(x)=cosx$<br>$g’(x)=-sinx$<br>$h’(x)=\frac{1}{cos^2x}=sec^2x$</p>
<h2 id="6-反三角函数"><a href="#6-反三角函数" class="headerlink" title="(6)反三角函数"></a>(6)反三角函数</h2><p>$f(x)=arcsinx,g(x)=arccosx,h(x)=arctanx$<br>$f’(x)=\frac{1}{\sqrt{1-x^2}}$<br>$g’(x)=-\frac{1}{\sqrt{1-x^2}}$<br>$h’(x)=\frac{1}{1+x^2}$</p>
<h1 id="一个诡异的函数"><a href="#一个诡异的函数" class="headerlink" title="一个诡异的函数"></a>一个诡异的函数</h1><p>$f(x)=x^x$这个函数这么求导呢？<br>我们只需要一步神奇的操作就可以了，看好了，千万不要眨眼<br>$f’(x)=\left(e^{ln\left(x^x\right)}\right)’=\left(e^{xlnx}\right)’=e^{xlnx}\times(xlnx)’=e^{xlnx}\times(1+lnx)$</p>
<h1 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h1><p>我：在本篇的末尾，我给大家出四个求导的练习题<br>读者：我最擅长微积分了，各种导数我都会求，你出的是什么水题，快拿来看看<br>我：先来个最简单的<br>$(sin(cos(sin(cose^x))))’$<br>我：有没有被吓到？<br>读者：没有，这不是很简单吗，一层层算就好了<br>我：没有？再来一个，保证吓死你<br>$sin(tanx+cosx)\times e^{x^2sinx+\sqrt{x^2+1}}$<br>读者：好了，我输了<br>我：不，我还没写分母呢！<br>$\left(\frac{sin(tanx+cosx)\times e^{x^2sinx+\sqrt{x^2+1}}}{e^xsin(x^2+3)+\sqrt{x^2+1}\times tanx}\right)’$<br>读者：什么！这个玩意儿能求导！？<br>我：能呀，我算过，再来一个<br>$\left(\frac{3x^2+5x^3sin2x+7e^{x^2+6x+sinx}+8ln(e^x+e^{\sqrt{5sinx+1}})}{ln(e^{5x}+sin(cose^x))\times(3x^2cosx+e^xsin(3x+1))}\right)’$<br>我：呀！你怎么了？你不会是晕了吧？<br>读者：突然感觉数学好难，我放弃了<br>我：别急呀，还有一道题呢！<br>$\left(\frac{\left(lnx^3+6xcos(sinx)\right)\left(arctan\left(l(x)e^xsin(tanx)\right)\right)}{e^{sin^2(xcosx)}ln^2(xarctanx)(x^2+1)}\right)’$<br>我：卧槽！你怎么了？同志，醒醒！<br>读者：我是谁？我在哪里？我在干什么？</p>
<hr>
<p>如果有人能做出这道题，可以私信给我，要求要有过程，来证明你不是抄的，你将会获得一些奖励</p>
]]></content>
      <categories>
        <category>数学&amp;物理&amp;信息竞赛</category>
      </categories>
      <tags>
        <tag>微积分</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ3696 The Luckiest number题解</title>
    <url>/2019/07/31/POJ3696%20The%20Luckiest%20number%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><strong><a href="http://poj.org/problem?id=3696" target="_blank" rel="noopener">原题</a></strong></p>
<a id="more"></a>

<h3 id="英文题目"><a href="#英文题目" class="headerlink" title="英文题目"></a>英文题目</h3><p>Chinese people think of ‘$8$’ as the lucky digit. Bob also likes digit ‘$8$’. Moreover, Bob has his own lucky number $L$. Now he wants to construct his luckiest number which is the minimum among all positive integers that are a multiple of $L$ and consist of only digit ‘$8$’.</p>
<h3 id="中文题意"><a href="#中文题意" class="headerlink" title="中文题意"></a>中文题意</h3><p>给定一个正整数$L$($L\leqslant 2\times10^9$)<br>问至少有多少个$8$连在一起组成的正整数是$L$的倍数</p>
<h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>每行一个正整数$L$($L\leqslant 2\times10^9$)</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每个$L$，输出至少有多少个$8$连在一起组成的正整数是$L$的倍数，格式参照样例。若不存在，输出$0$</p>
<h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><p>8<br>11<br>16<br>0</p>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><p>Case 1: 1<br>Case 2: 2<br>Case 3: 0</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>$n$个$8$连在一起组成的正整数可以记为$\frac{8}{9}(10^x-1)$<br>所以题目就转化为求最小的$x$使得$L|\frac{8}{9}(10^x-1)$<br>设$d=gcd(L,8)$<br>$L|\frac{8}{9}(10^x-1)\iff9L|8(10^x-1)\iff\frac{9L}{d}|10^x-1\iff10^x\equiv1\pmod{\frac{9L}{d}}$<br>这题的关键在于一个结论：若正整数$a,n$互质，则满足$a^x\equiv1\pmod{n}$的最小整数$x_0$为$\varphi(n)$的约数<br>证明：<br>假设满足$a^x\equiv1\pmod{n}$的最小整数$x_0$不能整除$\varphi(n)$<br>设$\varphi(n)=qx_0+r(0\leqslant r&lt;x_0)$<br>$\because a^{x_0}\equiv1\pmod{n}$<br>$\therefore a^{qx_0}\equiv1\pmod{n}$<br>又$\because a^{\varphi(n)}\equiv1\pmod{n}$（欧拉定理）<br>$\therefore a^{r}\equiv1\pmod{n}$，与$x_0$最小矛盾！<br>$\therefore$假设不成立，原命题成立</p>
<p>所以，我们只需要求出$\varphi(\frac{9L}{d})$，时间复杂度$\Theta(\sqrt{L}lnL)$<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">500000</span>],n,p,ans,i;</span><br><span class="line"><span class="keyword">int</span> t,m;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">phi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> i,m=n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i*i&lt;=n;i++) <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">        m=m/i*(i<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">while</span>(n%i==<span class="number">0</span>) n/=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>) m=m/n*(n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">mul</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a%=n,b%=n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> c=(<span class="keyword">long</span> <span class="keyword">double</span>)a*b/n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=a*b-c*n;</span><br><span class="line">    <span class="keyword">if</span> (ans&lt;<span class="number">0</span>) ans+=n;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ans&gt;=n) ans-=n;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">power</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> c=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) c=mul(c,a);</span><br><span class="line">        a=mul(a,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&amp;&amp;n)&#123;</span><br><span class="line">        n=<span class="number">9</span>*n/gcd(<span class="number">8</span>,n);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case "</span>&lt;&lt;++t&lt;&lt;<span class="string">": "</span>;</span><br><span class="line">        <span class="keyword">if</span>(gcd(<span class="number">10</span>,n)==<span class="number">1</span>)&#123;</span><br><span class="line">            p=phi(n);</span><br><span class="line">            m=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i*i&lt;=p;i++) <span class="keyword">if</span>(p%i==<span class="number">0</span>)&#123;</span><br><span class="line">                a[++m]=i;</span><br><span class="line">                <span class="keyword">if</span>(i*i!=p) a[++m]=p/i;</span><br><span class="line">            &#125;</span><br><span class="line">            sort(a+<span class="number">1</span>,a+m+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++) <span class="keyword">if</span>(power(<span class="number">10</span>,a[i])==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>信息竞赛</category>
      </categories>
      <tags>
        <tag>题解</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>基础数论总结</title>
    <url>/2019/07/31/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="一、数论中的基本概念与性质"><a href="#一、数论中的基本概念与性质" class="headerlink" title="一、数论中的基本概念与性质"></a>一、数论中的基本概念与性质</h1><h2 id="1、整除"><a href="#1、整除" class="headerlink" title="1、整除"></a>1、整除</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><a id="more"></a>
<p>若整数$b$除以非零整数$a$，商为整数，且余数为零， 我们就说$b$能被$a$整除（或说$a$能整除$b$），表示为$a \mid b$</p>
<h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><h4 id="1-反身性"><a href="#1-反身性" class="headerlink" title="(1)反身性"></a>(1)反身性</h4><p>$a \mid a$<br>证明：<br>$\because a \div a=1$<br>$\therefore a \mid a$</p>
<h4 id="2-反对称性"><a href="#2-反对称性" class="headerlink" title="(2)反对称性"></a>(2)反对称性</h4><p>$a \mid b$且$b \mid a$则$\left\vert a \right\vert=\left\vert b \right\vert$<br>证明：<br>$\because a \mid b,b \mid a$<br>$\therefore$设$b \div a=x,a \div b=y \left(x,y \in Z\right)$<br>$\therefore \begin{cases}b=ax\\a=by\end{cases}$<br>$\therefore b=ax=bxy$<br>$\therefore xy=1$<br>$\therefore \begin{cases} x= \pm 1\\y= \pm 1\end{cases}$<br>$\therefore \left\vert a \right\vert=\left\vert b \right\vert$<br>$\left\vert a \right\vert=\left\vert b \right\vert$则$a \mid b$且$b \mid a$<br>证明：<br>$\because \left\vert a \right\vert=\left\vert b \right\vert$<br>$\therefore \begin{cases} a \div b= \pm 1\\b \div a= \pm 1\end{cases}$<br>$\therefore a \mid b$且$b \mid a$</p>
<h4 id="3-传递性"><a href="#3-传递性" class="headerlink" title="(3)传递性"></a>(3)传递性</h4><p>$a \mid b$且$b \mid c$则$a \mid c$<br>证明：<br>$\because a \mid b,b \mid c$<br>$\therefore$设$b \div a=x,c \div b=y \left(x,y \in Z\right)$<br>$\therefore \begin{cases}b=ax\\c=by\end{cases}$<br>$\therefore c=by=axy$<br>$\therefore c \div a=xy$<br>$\therefore a \mid c$</p>
<h4 id="4-其他性质"><a href="#4-其他性质" class="headerlink" title="(4)其他性质"></a>(4)其他性质</h4><p>①$a \mid b$且$a \mid c$且$a \mid d$则$a \mid \left(ka+mb+nc+ld\right)$<br>证明：<br>$\because a \mid b,a \mid c,a \mid d$<br>$\therefore$设$b \div a=x,c \div a=y,d \div a=z \left(x,y,z \in Z\right)$<br>$\therefore \begin{cases}b=ax\\c=ay\\d=az\end{cases}$<br>$\therefore \left(ka+mb+nc+ld\right) \div a=\left(ka+mxa+nya+lza\right) \div a=\left(k +mx+ny+lz\right)$<br>$\therefore a \mid \left(ka+mb+nc+ld\right)$<br>②质数$p \mid ab$则$p \mid a$或$p \mid b$<br>证明：<br>假设$p \nmid a$且$p \nmid b$<br>$\because p \nmid a,p \nmid b$<br>$\therefore a$中不含有质因子$p$，$b$中不含有质因子$p$<br>$\therefore ab$中不含有质因子$p$<br>$\therefore p \nmid ab$，与$p \mid ab$矛盾<br>$\therefore$假设不成立<br>$\therefore p \mid a$或$p \mid b$<br>③连续$n$个整数中恰有一个整数是$n$的倍数<br>证明：<br>设这$n$个数为$a,a+1,\cdots,a+n-1,a \equiv r \pmod{n},1 \leqslant r \leqslant n$<br>$\therefore \left(a+n-r\right) \equiv \left(r+n-r\right) \equiv n \equiv 0 \pmod{n}$<br>又$\because 0 \leqslant n-r &lt; n$<br>$\therefore n \mid \left(a+n-r\right)$<br>$\therefore$连续$n$个整数中恰有一个整数是$n$的倍数<br>④连续$n$个整数的乘积为$n!$的倍数<br>证明：<br>设这$n$个数为$a,a+1,\cdots,a+n-1$<br>$\because C_{a+n-1}^{n}=\frac{\prod \limits_{i=1}^n \left(a+n-i\right)}{n!}$为整数<br>$\therefore n! \mid \prod \limits_{i=1}^n \left(a+n-i\right)$</p>
<h2 id="2、质数与合数"><a href="#2、质数与合数" class="headerlink" title="2、质数与合数"></a>2、质数与合数</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><h4 id="1-质数"><a href="#1-质数" class="headerlink" title="(1)质数"></a>(1)质数</h4><p>一个大于1的自然数，除了1和它自身外，不能整除其他自然数的数叫做质数</p>
<h4 id="2-合数"><a href="#2-合数" class="headerlink" title="(2)合数"></a>(2)合数</h4><p>合数指自然数中除了能被1和本身整除外，还能被其他数（0除外）整除的数</p>
<h3 id="性质-1"><a href="#性质-1" class="headerlink" title="性质"></a>性质</h3><h4 id="质数无穷多"><a href="#质数无穷多" class="headerlink" title="质数无穷多"></a>质数无穷多</h4><p>证明（质数无穷多的证明方法有许多，这里只展示1种，<del>其实我知道两种</del>，感兴趣的可以上网查）：<br>假设质数只有$n$个<br>从小到大依次排列为$p_{1},p_{2}, \cdots ,p_{n}$，设$N=\prod \limits_{i=1}^n p_{i}$<br>$\because p_{1} \nmid N$,$p_{2} \nmid N,\cdots,p_{n} \nmid N$<br>$\therefore N$为质数，与质数只有$n$个矛盾<br>$\therefore$假设不成立<br>$\therefore$质数无穷多</p>
<h4 id="算术基本定理"><a href="#算术基本定理" class="headerlink" title="算术基本定理"></a>算术基本定理</h4><p>每一个合数都可以以唯一形式被写成质数的乘积<br>证明：<br>假设合数可以以多种方式写成多个质数的乘积，设最小的是$n$<br>设$n=\prod \limits_{i=1}^{r}(p_{i}^{a_{i}})=\prod \limits_{i=1}^{s}(q_{i}^{b_{i}})$<br>$\because p_{1} \mid \prod \limits_{i=1}^{s}(q_{i}^{b_{i}})$<br>$\therefore q_{1}^{b_{1}},q_{2}^{b_{2}},\cdots,q_{s}^{b_{s}}$中有一个数能被$p_{1}$整除<br>$\therefore$不妨设为$q_{1}$<br>又$\because q_{1}$也是质数，因此$q_{1}=p_{1}$<br>假设$a_{1} &gt; b_{1}$<br>$\therefore p_{1}^{a_{1}-b_{1}} \prod \limits_{i=2}^{r}(p_{i}^{a_{i}})=\prod \limits_{i=2}^{s}(q_{i}^{b_{i}})$<br>$\therefore q_{2}^{b_{2}},q_{3}^{b_{3}},\cdots,q_{s}^{b_{s}}$中有一个数能被$p_{1}$整除<br>又$\because p_{1}=q_{1} \ne q_{i}(i \ne 1)$<br>$\therefore a_{1} \leqslant b_{1}$<br>同理，$\therefore a_{1} \geqslant b_{1}$<br>$\therefore a_{1} = b_{1}$<br>$\therefore$存在小于$n$的整数$m=\prod \limits_{i=2}^{r}(p_{i}^{a_{i}})=\prod \limits_{i=2}^{s}(q_{i}^{b_{i}})$可以用多于一种的方式写成多个质数的乘积，这与$n$的最小性矛盾<br>$\therefore$ 每一个合数都可以以唯一形式被写成质数的乘积</p>
<h2 id="3、最大公约数和最小公倍数"><a href="#3、最大公约数和最小公倍数" class="headerlink" title="3、最大公约数和最小公倍数"></a>3、最大公约数和最小公倍数</h2><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><h4 id="1-约数与倍数"><a href="#1-约数与倍数" class="headerlink" title="(1)约数与倍数"></a>(1)约数与倍数</h4><p>如果整数$a$能被整数$b$整除，$a$就叫做$b$的倍数，$b$就叫做$a$的约数</p>
<h4 id="2-公约数与公倍数"><a href="#2-公约数与公倍数" class="headerlink" title="(2)公约数与公倍数"></a>(2)公约数与公倍数</h4><p>几个整数中公有的约数，叫做这几个整数的公约数；几个整数中公有的倍数，叫做这几个整数的公倍数</p>
<h4 id="3-最大公约数与最小公倍数"><a href="#3-最大公约数与最小公倍数" class="headerlink" title="(3)最大公约数与最小公倍数"></a>(3)最大公约数与最小公倍数</h4><p>几个整数的公约数中，最大的一个，叫做这几个数的最大公约数；几个整数的公倍数中，最小的一个，叫做这几个数的最小公倍数数</p>
<h4 id="4-互质"><a href="#4-互质" class="headerlink" title="(4)互质"></a>(4)互质</h4><p>$\forall a,b \in N$,若(a,b)=1,则称$a,b$互质</p>
<h4 id="5-欧拉函数"><a href="#5-欧拉函数" class="headerlink" title="(5)欧拉函数"></a>(5)欧拉函数</h4><p>$1$~$N$中与$N$互质的数的个数被称为欧拉函数，记为$\varphi \left(N\right)=N \times \prod \limits_{质数p|N}(1-\frac{1}{p})$</p>
<h4 id="6-积性函数"><a href="#6-积性函数" class="headerlink" title="(6)积性函数"></a>(6)积性函数</h4><p>如果当$a,b$互质，有$f \left(ab\right)=f \left(a\right) \times f \left(b\right)$，那么称函数$f$为积性函数</p>
<h3 id="性质-2"><a href="#性质-2" class="headerlink" title="性质"></a>性质</h3><p>①$\forall a,b \in Z$，$gcd\left(a,b\right) \times lcm\left(a,b\right)=ab$<br>证明：<br>设$gcd\left(a,b\right)=d,a=a_{0}d,b=b_{0}d,(a_{0},b_{0})=1$<br>$lcm\left(a,b\right)=lcm\left(a_{0},b_{0}\right) \times d=a_{0}b_{0}d$<br>$\therefore gcd\left(a,b\right) \times lcm\left(a,b\right)=d \times a_{0}b_{0}d=a_{0}b_{0}d^{2}=\left(a_{0}d\right) \times \left(b_{0}d\right)=ab$<br>②$\forall n &gt; 1,1-n$中与$n$互质的数的和为$\frac{n \times \varphi \left(n\right)}{2}$<br>证明：<br>$\because gcd \left(n,x\right)=gcd \left(n,n-x\right)$<br>$\therefore$与$n$不互质的数$x,n-x$成对出现，平均值为$\frac{n}{2}$<br>$\therefore1-n$中与$n$互质的数的和为$\frac{n \times \varphi \left(n\right)}{2}$<br>③欧拉函数是积性函数<br>若$a,b$互质，则$\varphi \left(ab\right)=\varphi \left(a\right) \times \varphi \left(b\right)$<br>证明：<br>设$a=\prod \limits_{i=1}^{r}(p_{i}^{a_{i}}),b=\prod \limits_{i=1}^{s}(q_{i}^{b_{i}})$<br>$\therefore \varphi \left(a\right)=a \times \prod \limits_{i=1}^{r}(1-\frac{1}{p_{i}}),\varphi \left(b\right)=b \times \prod \limits_{i=1}^{s}(1-\frac{1}{q_{i}})$<br>$\therefore \varphi \left(ab\right)=ab \times \prod \limits_{i=1}^{r}(1-\frac{1}{p_{i}}) \times \prod \limits_{i=1}^{s}(1-\frac{1}{q_{i}})=\varphi \left(a\right) \times \varphi \left(b\right)$</p>
<h2 id="4、同余"><a href="#4、同余" class="headerlink" title="4、同余"></a>4、同余</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><h4 id="1-同余"><a href="#1-同余" class="headerlink" title="(1)同余"></a>(1)同余</h4><p>若整数$a$和整数$b$除以正整数$m$的余数相等，则称$a,b$模$m$同余，记为$a \equiv b \pmod{m}$</p>
<h4 id="2-同余类"><a href="#2-同余类" class="headerlink" title="(2)同余类"></a>(2)同余类</h4><p>对于$\forall a \in \left[0,m-1\right]$，集合$\left\{a+km\right\}(k \in Z)$的所有数模$m$同余，余数都是$a$，该集合称为一个模$m$的同余类，简记为$\overline{a}$</p>
<h4 id="3-完全剩余系"><a href="#3-完全剩余系" class="headerlink" title="(3)完全剩余系"></a>(3)完全剩余系</h4><p>模$m$的同余类一共有m个，分别为$\overline{0} , \overline{1} , \cdots , \overline{m-1}$,它们构成$m$的完全剩余系</p>
<h4 id="4-简化剩余系"><a href="#4-简化剩余系" class="headerlink" title="(4)简化剩余系"></a>(4)简化剩余系</h4><p>$1-m$中与$m$互质的数代表的同余类共有$\varphi \left(m\right)$个，它们构成$m$的简化剩余系</p>
<h4 id="5-数论倒数（乘法逆元）"><a href="#5-数论倒数（乘法逆元）" class="headerlink" title="(5)数论倒数（乘法逆元）"></a>(5)数论倒数（乘法逆元）</h4><p>若整数$a,x$满足$ax \equiv 1 \pmod{b}$，则$x$为$a$对模$m$意义下的数论倒数（乘法逆元）记为$a^{-1} \pmod{m}$</p>
<h3 id="性质-3"><a href="#性质-3" class="headerlink" title="性质"></a>性质</h3><h4 id="1-同余的充要条件"><a href="#1-同余的充要条件" class="headerlink" title="(1)同余的充要条件"></a>(1)同余的充要条件</h4><p>$a \equiv b \pmod{m}$的充要条件是$m \mid \left(a-b\right)$<br>证明：<br>$\because m \mid \left(a-b\right)$<br>$\therefore$存在整数$t$使得$a-b=mt$<br>$\therefore a=b+mt$<br>$\therefore a \equiv b \pmod{m}$</p>
<hr>
<p>$\because a \equiv b \pmod{m}$<br>$\therefore$存在整数$t$使得$a=b+mt$<br>$\therefore a-b=mt$<br>$\therefore m \mid \left(a-b\right)$</p>
<h4 id="2-反身性"><a href="#2-反身性" class="headerlink" title="(2)反身性"></a>(2)反身性</h4><p>$a \equiv a \pmod{m}$<br>证明：<br>$\because a-a=0,m \ne 0$<br>$\therefore m \mid a-a$<br>$\therefore a \equiv a \pmod{m}$</p>
<h4 id="3-对称性"><a href="#3-对称性" class="headerlink" title="(3)对称性"></a>(3)对称性</h4><p>$a \equiv b \pmod{m}$则$b \equiv a \pmod{m}$<br>证明：<br>$\because a \equiv b \pmod{m}$<br>$\therefore m \mid \left(a-b\right)$<br>$\therefore m \mid \left(b-a\right)$<br>$\therefore b \equiv a \pmod{m}$</p>
<h4 id="4-传递性"><a href="#4-传递性" class="headerlink" title="(4)传递性"></a>(4)传递性</h4><p>$a \equiv b \pmod{m}$且$b \equiv c \pmod{m}$则$a \equiv c \pmod{m}$<br>$\because a \equiv b \pmod{m}$<br>$\therefore m \mid \left(a-b\right)$<br>又$\because b \equiv c \pmod{m}$<br>$\therefore m \mid \left(b-c\right)$<br>$\therefore m \mid \left[\left(a-b\right)+\left(b-c\right)\right]$<br>$\therefore m \mid \left(a-c\right)$<br>$\therefore a \equiv c \pmod{m}$</p>
<h4 id="5-可加性"><a href="#5-可加性" class="headerlink" title="(5)可加性"></a>(5)可加性</h4><p>$a \equiv b \pmod{m}$且$c \equiv d \pmod{m}$则$a+c \equiv b+d \pmod{m}$<br>证明：<br>$\because a \equiv b \pmod{m}$<br>$\therefore m \mid \left(a-b\right)$<br>又$\because c \equiv d \pmod{m}$<br>$\therefore m \mid \left(c-d\right)$<br>$\therefore m \mid \left[\left(a-b\right)+\left(c-d\right)\right]$<br>$\therefore m \mid \left[\left(a+c\right)-\left(b+d\right)\right]$<br>$\therefore a+c \equiv b+d \pmod{m}$</p>
<h4 id="6-可减性"><a href="#6-可减性" class="headerlink" title="(6)可减性"></a>(6)可减性</h4><p>$a \equiv b \pmod{m},c \equiv d \pmod{m}$则$a-c \equiv b-d \pmod{m}$<br>证明：<br>$\because a \equiv b \pmod{m}$<br>$\therefore m \mid \left(a-b\right)$<br>又$\because c \equiv d \pmod{m}$<br>$\therefore m \mid \left(c-d\right)$<br>$\therefore m \mid \left[\left(a-b\right)-\left(c-d\right)\right]$<br>$\therefore m \mid \left[\left(a-c\right)-\left(b-d\right)\right]$<br>$\therefore a-c \equiv b-d \pmod{m}$</p>
<h4 id="7-可乘性"><a href="#7-可乘性" class="headerlink" title="(7)可乘性"></a>(7)可乘性</h4><p>①$a \equiv b \pmod{m}$则$ac \equiv bc \pmod{m}$<br>证明：<br>$\because a \equiv b \pmod{m}$<br>$\therefore m \mid \left(a-b\right)$<br>$\therefore m \mid \left(a-b\right)c$<br>$\therefore m \mid \left(ac-bc\right)$<br>$\therefore ac \equiv bc \pmod{m}$<br>②$a \equiv b \pmod{m},c \equiv d \pmod{m}$则$ac \equiv bd \pmod{m}$<br>证明：<br>$\because a \equiv b \pmod{m}$<br>$\therefore ac \equiv bc \pmod{m}$<br>又$\because c \equiv d \pmod{m}$<br>$\therefore bc \equiv bd \pmod{m}$<br>$\therefore ac \equiv bd \pmod{m}$</p>
<h4 id="8-有关同余的其他性质"><a href="#8-有关同余的其他性质" class="headerlink" title="(8)有关同余的其他性质"></a>(8)有关同余的其他性质</h4><p>①$ac \equiv bc \pmod{m}$且$\left(m,c\right)=1$则$a \equiv b \pmod{m}$<br>证明：<br>$\because ac \equiv bc \pmod{m}$<br>$\therefore m \mid \left(ac-bc\right)$<br>$\therefore m \mid \left(a-b\right)c$<br>又$\because \left(m,c\right)=1$<br>$\therefore m \mid \left(a-b\right)$<br>$\therefore a \equiv b \pmod{m}$<br>②$ac \equiv bc \pmod{mc}$则$a \equiv b \pmod{m}$<br>证明：<br>$\because ac \equiv bc \pmod{mc}$<br>$\therefore mc \mid \left(ac-bc\right)$<br>$\therefore m \mid \left(a-b\right)$<br>$\therefore a \equiv b \pmod{m}$</p>
<h4 id="9-有关完全剩余系的性质"><a href="#9-有关完全剩余系的性质" class="headerlink" title="(9)有关完全剩余系的性质"></a>(9)有关完全剩余系的性质</h4><p>$gcd\left(m,a\right)=1$且$\left\{\overline{b_{i}}\right\}\left(i\in \left[1,m\right]\right)$是模$m$的一个完全剩余系，则$\left\{\overline{ab_{i}}\right\}\left(i\in \left[1,m\right]\right)$也是模$m$的一个完全剩余系<br>证明：<br>假设存在两个整数$a \times b_{i} \equiv a \times b_{j} \pmod{m}$<br>$b_{i} \equiv b_{j} \pmod{m}$，与$\left\{\overline{b_{i}}\right\}\left(i\in \left[1,m\right]\right)$是模$m$的一个完全剩余系矛盾<br>$\therefore$假设不成立<br>$\therefore \left\{\overline{ab_{i}}\right\}\left(i\in \left[1,m\right]\right)$是模$m$的一个完全剩余系</p>
<h4 id="10-有关简化剩余系的性质"><a href="#10-有关简化剩余系的性质" class="headerlink" title="(10)有关简化剩余系的性质"></a>(10)有关简化剩余系的性质</h4><p>$gcd\left(m,a\right)=1$且$\left\{\overline{b_{i}}\right\}\left(i\in \left[1,\varphi \left(m\right)\right]\right)$是模$m$的一个简化剩余系，则$\left\{\overline{ab_{i}}\right\}\left(i\in \left[1,\varphi \left(m\right)\right]\right)$也是模$m$的一个完全剩余系<br>证明：<br>假设存在两个整数$a \times b_{i} \equiv a \times b_{j} \pmod{m}$<br>$b_{i} \equiv b_{j} \pmod{m}$，与$\left\{\overline{b_{i}}\right\}\left(i\in \left[1,m\right]\right)$是模$m$的一个简化剩余系矛盾<br>$\therefore$假设不成立<br>$\therefore \left\{\overline{ab_{i}}\right\}\left(i\in \left[1,m\right]\right)$是模$m$的一个简化剩余系</p>
<h4 id="11-费马小定理"><a href="#11-费马小定理" class="headerlink" title="(11)费马小定理"></a>(11)费马小定理</h4><p>若$p$是质数，则对任意与$p$互质的整数$a$，有$a^{p-1} \equiv 1 \pmod{p}$<br>证明：<br>设$p$的完全剩余系为$\left\{\overline{i}\right\}\left(i \in\left[1,p-1\right]\right)$<br>$\because gcd\left(a,p\right)=1$<br>$\therefore \{\overline{ai}\}(i\in\left[1,p-1\right])$也是$p$的一个完全剩余系<br>$\therefore$对于每一个$i(i\in\left[1,p-1\right])$，总存在一个$j$使得$i \equiv a \times j \pmod{p}$<br>$\therefore \left(p-1\right)! \equiv \left(p-1\right)! \times a^{p-1} \pmod{p}$<br>又$\because \left(p,\left(p-1\right)!\right)=1$<br>$\therefore a^{p-1} \equiv 1 \pmod{p}$</p>
<h4 id="12-欧拉定理"><a href="#12-欧拉定理" class="headerlink" title="(12)欧拉定理"></a>(12)欧拉定理</h4><p>$gcd\left(a,n\right)=1,a \in Z^{+}$，则$a^{\varphi \left(n\right)} \equiv 1 \pmod{n}$<br>证明：<br>设$n$的简化剩余系为$\left\{\overline{a_{i}}\right\}\left(i \in\left[1,\varphi\left(n\right)\right]\right)$<br>$\because gcd\left(a,n\right)=1$<br>$\therefore \{\overline{aa_{i}}\}(i\in\left[1,\varphi \left(n\right)\right])$也是$p$的一个化简剩余系<br>$\therefore$对于每一个$a_{i}(i\in\left[1,\varphi \left(n\right)\right])$，总存在一个$j$使得$i \equiv a \times a_{j} \pmod{p}$<br>$\therefore \prod \limits_{i=1}^{\varphi \left(n\right)} a_{i} \equiv \prod \limits_{i=1}^{\varphi \left(n\right)}a_{i} \times a^{\varphi \left(n\right)} \pmod{n}$<br>$\therefore a^{\varphi \left(n\right)} \equiv 1 \pmod{n}$</p>
<h4 id="13-欧拉定理推论"><a href="#13-欧拉定理推论" class="headerlink" title="(13)欧拉定理推论"></a>(13)欧拉定理推论</h4><p>$gcd\left(a,n\right)=1,a \in Z^{+}$，则对于任意的正整数$b$，有$a^b \equiv a^{b \% \varphi \left(n\right)} \pmod{n}$<br>证明：<br>设$b=q \times \varphi \left(n\right)+r,0 \leqslant r &lt; \varphi \left(n\right)$<br>$a^{b} \equiv a^{q \times \varphi \left(n\right)+r} \equiv \left(a^{\varphi \left(n\right)}\right)^{q} \times a^{r} \equiv 1^{q} \times a^{r} \equiv a^{r} \equiv a^{b \% \varphi \left(n\right)} \pmod{n}$</p>
<h2 id="5、不定方程（丢番图方程）"><a href="#5、不定方程（丢番图方程）" class="headerlink" title="5、不定方程（丢番图方程）"></a>5、不定方程（丢番图方程）</h2><h3 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h3><p>不定方程是指未知数的个数多于方程个数，且未知数受到某些限制（如要求是有理数、整数或正整数等等）的方程或方程组</p>
<h3 id="性质-4"><a href="#性质-4" class="headerlink" title="性质"></a>性质</h3><h4 id="1-裴蜀Bezout定理"><a href="#1-裴蜀Bezout定理" class="headerlink" title="(1)裴蜀Bézout定理"></a>(1)裴蜀Bézout定理</h4><p>对于任意正整数$a,b$，存在一对整数$x,y$，满足$ax+by=gcd\left(a,b\right)$<br>证明：<br>设$gcd\left(a,b\right)=d,a=a_{0}d,b=b_{0}d$<br>$aa_{0}+bb_{0}=1$<br>$\therefore \left(a_{0},b_{0}\right)$是方程$ax+by=\left(a,b\right)$的一组解</p>
<h4 id="2-所有解与特解的关系"><a href="#2-所有解与特解的关系" class="headerlink" title="(2)所有解与特解的关系"></a>(2)所有解与特解的关系</h4><p>$\left(x_{0},y_{0}\right)$是方程$ax+by=c$的一组整数解，则方程的所有解为$\begin{cases}x=x_{0}+\frac{b}{gcd\left(a,b\right)}t\\y=y_{0}-\frac{a}{gcd\left(a,b\right)}t\end{cases},t \in Z$<br>证明：<br>设$ax_{1}+by_{1}=c,gcd\left(a,b\right)=c_{0},a=a_{0}c_{0},b=b_{0}c_{0},gcd\left(a_{0},b_{0}\right)=1$<br>$a_{0}x_{0}+b_{0}y_{0}=c_{0},a_{0}x_{1}+b_{0}y_{1}=c_{0}$<br>$\therefore a_{0}x_{0}+b_{0}y_{0}=a_{0}x_{1}+b_{0}y_{1}$<br>$\therefore a_{0}\left(x_{0}-x_{1}\right)=b_{0}\left(y_{1}-y_{0}\right)$<br>$\therefore b_{0} \mid a_{0}(x_{0}-x_{1})$<br>$\therefore b_{0} \mid \left(x_{0}-x_{1}\right)$<br>$\therefore x_{0} \equiv x_{1} \pmod{b_{0}}$<br>同理，$\therefore y_{0} \equiv y_{1} \pmod{b_{0}}$<br>$\therefore \begin{cases}x=x_{0}+b_{0}t\\y=y_{0}-a_{0}t\end{cases}$<br>$\therefore \begin{cases}x=x_{0}+\frac{b}{gcd\left(a,b\right)}t\\y=y_{0}-\frac{a}{gcd\left(a,b\right)}t\end{cases}$</p>
<h4 id="3-其他性质"><a href="#3-其他性质" class="headerlink" title="(3)其他性质"></a>(3)其他性质</h4><p>①$gcd\left(a,b\right)=1,a,b \in Z^{+}$，则方程$ax+by=ab-a-b$没有非负整数解<br>证明：<br>$\because ax+by=ab-a-b$<br>$\therefore a \left(x+1\right)+b \left(y+1\right)=ab$<br>又$\because a \mid ab$<br>$\therefore a \mid \left(a \left(x+1\right)+b \left(y+1\right)\right)$<br>$\therefore a \mid b \left(y+1\right)$<br>又$\because gcd\left(a,b\right)=1$<br>$\therefore a \mid \left(y+1\right)$<br>②$gcd\left(a,b\right)=1,c&gt;ab-a-b,a,b,c \in Z^{+}$，则方程$ax+by=c$有非负整数解<br>证明：<br>$\because gcd\left(a,b\right)=1$<br>$\therefore$设$ax_{0}+by_{0}=c,0 \leqslant x_{0} \leqslant b-1$<br>$\therefore y_{0}=\frac{c-ax_{0}}{b}&gt;\frac{ab-a-b-ax_{0}}{b} \geqslant \frac{ab-a-b-a\left(b-1\right)}{b}=-1$<br>$\therefore y_{0} \geqslant 0$<br>$\therefore x_{0},y_{0}$为非负整数<br>$\therefore$方程$ax+by=c$有非负整数解<br>③$gcd\left(a,b\right)=1,a,b \in Z^{+},0 \leqslant c \leqslant ab-a-b$，则恰有$\frac{\left(a-1\right)\left(b-1\right)}{2}$个整数$c$不能表示成$ax+by$的形式，$x,y \in \N$</p>
<h2 id="6、同余方程"><a href="#6、同余方程" class="headerlink" title="6、同余方程"></a>6、同余方程</h2><h3 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h3><p>设$f(x)=\sum \limits_{i=0}^{n}a_{i}x^{i}$是整系数多项式，称$f(x) \equiv 0 \pmod{m}$是$x$模$m$的同余方程</p>
<h2 id="7、高斯函数"><a href="#7、高斯函数" class="headerlink" title="7、高斯函数"></a>7、高斯函数</h2><h3 id="定义-6"><a href="#定义-6" class="headerlink" title="定义"></a>定义</h3><h4 id="1-取整函数"><a href="#1-取整函数" class="headerlink" title="(1)取整函数"></a>(1)取整函数</h4><p>不超过实数$x$的最大整数称为$x$的整数部分，记作$\left[x\right]$<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMi5heDF4LmNvbS8yMDE5LzAyLzIwL2sybjdmcy5wbmc" alt=""></p>
<h3 id="2-取小函数"><a href="#2-取小函数" class="headerlink" title="(2)取小函数"></a>(2)取小函数</h3><p>实数$x$的非负纯小数部分，记作$\left\{x\right\}$<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMi5heDF4LmNvbS8yMDE5LzAyLzIwL2sybkw2MC5wbmc" alt=""></p>
<h3 id="性质-5"><a href="#性质-5" class="headerlink" title="性质"></a>性质</h3><p>①$x=\left[x\right]+\left\{x\right\}$<br>②$x-1&lt;\left[x\right] \leqslant x$<br>③$0 \leqslant \left\{x\right\}&lt;1$<br>④若$x \leqslant y$，则$\left[x\right] \leqslant \left[y\right]$<br>证明：<br>$\because \left[x\right] \leqslant x \leqslant y&lt;\left[y\right]+1$<br>$\therefore \left[x\right] \leqslant \left[y\right]$<br>⑤$\forall a \in Z^{*},b \in Z$，则$b=a \left[\frac{b}{a}\right]+a\left\{\frac{b}{a}\right\},a\left\{\frac{b}{a}\right\} \in Z$<br>证明：<br>$\because \frac{b}{a}=\left[\frac{b}{a}\right]+\left\{\frac{b}{a}\right\}$<br>$\therefore b=a \left[\frac{b}{a}\right]+a\left\{\frac{b}{a}\right\}$<br>$\therefore a\left\{\frac{b}{a}\right\}=b-a \left[\frac{b}{a}\right]$<br>$\therefore a\left\{\frac{b}{a}\right\} \in Z$<br>⑥$\left[x\right]+\left[y\right]=\left[x+y\right]$或$\left[x+y\right]=\left[x\right]+\left[y\right]+1$<br>证明：<br>$\because x+y=\left[x\right]+\left[y\right]+\left\{x\right\}+\left\{y\right\}$<br>$\therefore$当$0 \leqslant \left\{x\right\}+\left\{y\right\}&lt;1$时，$\left[x\right]+\left[y\right]=\left[x+y\right]$<br>$  \;$当$1 \leqslant \left\{x\right\}+\left\{y\right\}&lt;2$时，$\left[x\right]+\left[y\right]+1=\left[x+y\right]$</p>
<h1 id="二、数论中相关的数和方程的求法"><a href="#二、数论中相关的数和方程的求法" class="headerlink" title="二、数论中相关的数和方程的求法"></a>二、数论中相关的数和方程的求法</h1><h2 id="1、埃拉托斯特尼筛法（埃氏筛法）"><a href="#1、埃拉托斯特尼筛法（埃氏筛法）" class="headerlink" title="1、埃拉托斯特尼筛法（埃氏筛法）"></a>1、埃拉托斯特尼筛法（埃氏筛法）</h2><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>要得到自然数$n$以内的全部素数，必须把不大于$\sqrt{n}$的所有素数的倍数剔除，剩下的就是素数</p>
<h3 id="程序实现"><a href="#程序实现" class="headerlink" title="程序实现"></a>程序实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">primes</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span>(v));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n/i;j++) v[i*j]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>$\Theta \left(n \times \log \left(\log \left(n\right)\right)\right)$</p>
<h3 id="时间复杂度证明"><a href="#时间复杂度证明" class="headerlink" title="时间复杂度证明"></a>时间复杂度证明</h3><p>$\Theta \left(\log \left(n\right)\right)=\Theta \left(\ln \left(n\right)\right)=\Theta \left(\int_{1}^{n+1} \frac{dx}{x}\right)=\Theta \left(\sum \limits_{i=1}^{n} \int_{i}^{i+1} \frac{dx}{x}\right) &lt; \Theta \left(\sum \limits_{i=1}^{n} \frac{1}{i}\right) \leqslant \Theta \left(\prod \limits_{质数p \leqslant n} \left(1+\frac{1}{p}\right) \times \sum \limits_{k=1}^{n} \frac{1}{k^{2}}\right) &lt; \Theta \left(\prod \limits_{质数p \leqslant n} \left(1+\frac{1}{p}\right) \times \left(1+\sum \limits_{k=2}^{n} \left(\frac{1}{k-\frac{1}{2}}-\frac{1}{k+\frac{1}{2}} \right) \right) \right) = \Theta \left(\prod \limits_{质数p \leqslant n} \left(1+\frac{1}{p}\right) \times \left(1+\frac{2}{3}+\frac{1}{n+\frac{1}{2}}\right)\right) &lt; \Theta \left(\frac{5}{3}\prod \limits_{质数p \leqslant n} \left(1+\frac{1}{p}\right)\right) &lt; \Theta \left(\frac{5}{3} \prod \limits_{质数p \leqslant n} \exp  \left(\frac{1}{p}\right)\right) = \Theta \left(\frac{5}{3} \exp \left(\sum \limits_{质数p \leqslant n} \frac{1}{p}\right)\right)$<br>$\therefore \Theta \left(n \times \log \left(\log \left(n\right)\right)\right) = \Theta \left(n \times \ln \left(\ln \left(n\right)\right)\right) &lt; \Theta \left(n \times \ln \left(\frac{5}{3} \exp \left(\sum \limits_{质数p \leqslant n} \frac{1}{p}\right)\right)\right) = \Theta \left(n \times \sum \limits_{质数p \leqslant n} \frac{1}{p}\right)$</p>
<h2 id="2、欧拉筛法"><a href="#2、欧拉筛法" class="headerlink" title="2、欧拉筛法"></a>2、欧拉筛法</h2><h3 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h3><p>在埃氏筛法的基础上，让每个合数只被它的最小质因子筛选一次，以达到不重复的目的</p>
<h3 id="程序实现-1"><a href="#程序实现-1" class="headerlink" title="程序实现"></a>程序实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">primes</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span>(v));</span><br><span class="line">    m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            v[i]=i;</span><br><span class="line">            prime[++m]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(prime[j]&gt;v[i]||prime[j]&gt;n/i) <span class="keyword">break</span>;</span><br><span class="line">            v[i*prime[j]]=prime[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">cout</span>&lt;&lt;prime[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度-1"><a href="#时间复杂度-1" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>$\Theta \left(n\right)$</p>
<h2 id="3、质因数分解"><a href="#3、质因数分解" class="headerlink" title="3、质因数分解"></a>3、质因数分解</h2><h3 id="内容-2"><a href="#内容-2" class="headerlink" title="内容"></a>内容</h3><p>$\forall N \in Z^{+} \setminus \left\{1\right\}$，把$N$化为$\prod \limits^{m}_{i=1} p^{c_{i}}_{i}$的过程叫质因数分解</p>
<h3 id="程序实现-2"><a href="#程序实现-2" class="headerlink" title="程序实现"></a>程序实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">  m=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++) <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">    p[++m]=i,c[m]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n%i==<span class="number">0</span>) n/=i,c[m]++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(n&gt;<span class="number">1</span>) p[++m]=n,c[m]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">cout</span>&lt;&lt;p[i]&lt;&lt;<span class="string">'^'</span>&lt;&lt;c[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度-2"><a href="#时间复杂度-2" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>$\Theta \left(\sqrt N\right)$</p>
<h2 id="4、欧几里得算法（辗转相除法）"><a href="#4、欧几里得算法（辗转相除法）" class="headerlink" title="4、欧几里得算法（辗转相除法）"></a>4、欧几里得算法（辗转相除法）</h2><h3 id="内容-3"><a href="#内容-3" class="headerlink" title="内容"></a>内容</h3><p>$\forall a,b \in N,b \ne 0,gcd(a,b)=gcd(b,a \% b)$</p>
<h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><p>若$a&lt;b$，则$gcd(b,a \% b)=gcd(b,a)=gcd(a,b)$，命题成立<br>若$a \geqslant b$，设$a=q \times b+r,0 \leqslant r&lt;b,a,b$的一个公约数为$d$<br>$d \mid a,d \mid qb$<br>$\therefore d \mid \left(a-qb\right)$<br>$\therefore d \mid r$<br>$\therefore d$也是$b,r$的公约数<br>$\therefore a,b$的公约数集合与$b,r$的公约数集合相同<br>$\therefore a,b$和$b,r$的最大公约数相等</p>
<h3 id="程序实现-3"><a href="#程序实现-3" class="headerlink" title="程序实现"></a>程序实现</h3><h4 id="递归写法"><a href="#递归写法" class="headerlink" title="递归写法"></a>递归写法</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="非递归写法"><a href="#非递归写法" class="headerlink" title="非递归写法"></a>非递归写法</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(b!=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=a;</span><br><span class="line">    a=b;</span><br><span class="line">    b=temp%a;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度-3"><a href="#时间复杂度-3" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>$\Theta \left(\log \left(a+b\right)\right)$</p>
<h2 id="5、扩展欧几里得算法"><a href="#5、扩展欧几里得算法" class="headerlink" title="5、扩展欧几里得算法"></a>5、扩展欧几里得算法</h2><h3 id="内容-4"><a href="#内容-4" class="headerlink" title="内容"></a>内容</h3><p>求方程$ax+by=gcd\left(a,b\right),a,b,x,y \in Z$的解$x,y$<br>当$b=0$时，$x=1,y=0$为方程的解<br>当$b&gt;0$时，$gcd \left(a,b\right)=gcd \left(b,a\%b\right)$<br>设$bx’+\left(a\%b\right)y’=gcd\left(b,a\%b\right),x’,y’ \in Z$<br>$\therefore bx’+\left(a\%b\right)y’=bx’+\left(a-b \left \lfloor \frac{a}{b} \right \rfloor\right)y’=ay’+b \left(x’-\left \lfloor \frac{a}{b} \right \rfloor y’\right)$<br>$\therefore \begin{cases} x=y’ \\y=x’-\left \lfloor \frac{a}{b} \right \rfloor y \end{cases}$</p>
<h3 id="程序实现-4"><a href="#程序实现-4" class="headerlink" title="程序实现"></a>程序实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)&#123;x=<span class="number">1</span>,y=<span class="number">0</span>;<span class="keyword">return</span> a;&#125;</span><br><span class="line">    <span class="keyword">int</span> d=exgcd(b,a%b,x,y),z=x;</span><br><span class="line">    x=y,y=z-y*(a/b);</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="6、线性同余方程组的解法"><a href="#6、线性同余方程组的解法" class="headerlink" title="6、线性同余方程组的解法"></a>6、线性同余方程组的解法</h2><h3 id="内容-5"><a href="#内容-5" class="headerlink" title="内容"></a>内容</h3><p>设$m_{1},m_{2},\cdots \cdots,m_{n} \in Z^{+}$，对于任意$n$个整数$a_{1},a_{2},\cdots \cdots,a_{n}$，求方程组$\begin{cases} x \equiv a_{1} \pmod{m_{1}}\\x \equiv a_{2} \pmod{m_{2}}\\             \vdots\\x \equiv a_{n} \pmod{m_{n}} \end{cases}$的解</p>
<h3 id="证明-1"><a href="#证明-1" class="headerlink" title="证明"></a>证明</h3><p>设前$k-1$个方程的解为$x,m= \sum \limits^{t-1}_{i=1}m_{i},tm \equiv a_{k}-x \pmod{m_{k}}$<br>$\therefore x+tm \equiv a^{k} \pmod{m^{k}}$<br>$\therefore x’=x+tm$为前$k$个方程的解</p>
<h3 id="程序实现-5"><a href="#程序实现-5" class="headerlink" title="程序实现"></a>程序实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,m[<span class="number">20</span>],a[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> &amp;x,<span class="keyword">long</span> <span class="keyword">long</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!b)&#123;x=<span class="number">1</span>,y=<span class="number">0</span>;<span class="keyword">return</span> a;&#125;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> d=exgcd(b,a%b,x,y),z=x;</span><br><span class="line">  x=y,y=z-y*(a/b);</span><br><span class="line">  <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">xxtyfcz</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> M,A,d,x,y;</span><br><span class="line">  M=m[<span class="number">1</span>];</span><br><span class="line">  A=a[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    d=exgcd(M,m[i],x,y);</span><br><span class="line">    <span class="keyword">if</span>((a[i]-A)%d!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> temp=<span class="built_in">abs</span>(m[i]/d);</span><br><span class="line">    x=x*((a[i]-A)/d);</span><br><span class="line">    x=(x%temp+temp)%temp;</span><br><span class="line">    A=M*x+A;</span><br><span class="line">    M=M*m[i]/d;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (A%M+M)%M;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="三、例题"><a href="#三、例题" class="headerlink" title="三、例题"></a>三、例题</h1><h2 id="1、POJ2689-Prime-Distance题解"><a href="#1、POJ2689-Prime-Distance题解" class="headerlink" title="1、POJ2689 Prime Distance题解"></a>1、POJ2689 Prime Distance题解</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p><strong><a href="http://poj.org/problem?id=2689" target="_blank" rel="noopener">原题</a></strong></p>
<h5 id="英文题目"><a href="#英文题目" class="headerlink" title="英文题目"></a>英文题目</h5><p>The branch of mathematics called number theory is about properties of numbers. One of the areas that has captured the interest of number theoreticians for thousands of years is the question of primality. A prime number is a number that is has no proper factors (it is only evenly divisible by $1$ and itself). The first prime numbers are $2,3,5,7$ but they quickly become less frequent. One of the interesting questions is how dense they are in various ranges. Adjacent primes are two numbers that are both primes, but there are no other prime numbers between the adjacent primes. For example, $2,3$ are the only adjacent primes that are also adjacent numbers.<br>Your program is given $2$ numbers: $L$ and $U$ ($1 \leqslant L&lt; U \leqslant 2,147,483,647$), and you are to find the two adjacent primes $C1$ and $C2$ ($L \leqslant C1&lt; C2 \leqslant U$) that are closest (i.e. $C2-C1$ is the minimum). If there are other pairs that are the same distance apart, use the first pair. You are also to find the two adjacent primes $D1$ and $D2$ ($L \leqslant D1&lt; D2 \leqslant U$) where $D1$ and $D2$ are as distant from each other as possible (again choosing the first pair if there is a tie).</p>
<h5 id="中文题意"><a href="#中文题意" class="headerlink" title="中文题意"></a>中文题意</h5><p>给定两个整数$L,R$($1 \leqslant L&lt; R \leqslant 2,147,483,647$)，求闭区间 $\left[L,R\right]$中相邻两个质数的差的最小值和最大值是多少，分别输出这两对质数</p>
<h4 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h4><h5 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h5><p>每行两个整数$L,R$($1 \leqslant L&lt; R \leqslant 2,147,483,647,R-L \leqslant 10^6$)</p>
<h5 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h5><p>对于每个$L,R$，输出最小值和最大值，格式参照样例<br>若区间内无质数，输出”There are no adjacent primes.”</p>
<h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h5><p>2 17<br>14 17</p>
<h5 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h5><p>2,3 are closest, 7,11 are most distant.<br>There are no adjacent primes.</p>
<h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>由于$L,R$的范围很大，所以埃氏筛法和欧拉筛法都无法生成$\left[1,R\right]$的所有质数<br>但是$R-L$的范围很小且任何一个合数$n$一定包含一个不超过$\sqrt{n}$的质因子，所以我们只需要用筛法求出$2,3,\cdots,\sqrt{n}$的所有质数<br>而对于每一个质数$p$，标记$i \times p \left(\left\lceil\frac{L}{p}\right\rceil \leqslant i \leqslant \left\lceil\frac{R}{p}\right\rceil\right)$为合数<br>标记完后，剩下的所有数就是$\left[L,R\right]$中的质数了<br>再两两比较，找出差最大和最小的就可以了，时间复杂度$\Theta(\sqrt{R}lnln\sqrt{R}+(R-L)lnlnR)$</p>
<h2 id="2、洛谷P1072-Hankson的趣味题"><a href="#2、洛谷P1072-Hankson的趣味题" class="headerlink" title="2、洛谷P1072 Hankson的趣味题"></a>2、洛谷P1072 Hankson的趣味题</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p><strong><a href="https://www.luogu.org/problem/P1072" target="_blank" rel="noopener">原题</a></strong><br>Hanks博士是 BT(Bio-Tech，生物技术)领域的知名专家，他的儿子名叫Hankson。现在，刚刚放学回家的Hankson正在思考一个有趣的问题。<br>今天在课堂上，老师讲解了如何求两个正整数$c_1$和$c_2$的最大公约数和最小公倍数。现在Hankson认为自己已经熟练地掌握了这些知识，他开始思考一个“求公约数”和“求公倍数”之类问题的“逆问题”，这个问题是这样的：已知正整数$a_0,a_1,b_0,b_1$，设某未知正整数$x$满足：<br>1.$x$和 $a_0$的最大公约数是$a_1$​；<br>2.$x$和$b_0$的最小公倍数是$b_1$。<br>Hankson的“逆问题”就是求出满足条件的正整数$x$。但稍加思索之后，他发现这样的$x$并不唯一，甚至可能不存在。因此他转而开始考虑如何求解满足条件的$x$的个数。请你帮助他编程求解这个问题。</p>
<h4 id="输入输出格式-1"><a href="#输入输出格式-1" class="headerlink" title="输入输出格式"></a>输入输出格式</h4><h5 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h5><p>第一行为一个正整数$n$，表示有$n$组输入数据。接下来的$n$行每行一组输入数据，为四个正整数 $a_0,a_1,b_0,b_1$​，每两个整数之间用一个空格隔开。输入数据保证$a_0$能被$a_1$整除，$b_1$能被$b_0$​整除。</p>
<h5 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h5><p>共$n$行。每组输入数据的输出结果占一行，为一个整数。<br>对于每组数据：若不存在这样的$x$，请输出$0$；<br>若存在这样的$x$，请输出满足条件的$x$的个数；</p>
<h4 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例"></a>输入样例</h5><p>2<br>41 1 96 288<br>95 1 37 1776 </p>
<h5 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例"></a>输出样例</h5><p>6<br>2</p>
<h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>因为$x$是$b_1$的约数，所以$x$的质因子一定也是$b_1$的质因子，所以我对于$b_1$的每个质因子$p$，我们可以计算$x$中有多少个$p$<br>假设$a_0,a_1,b_0,b_1,x$中分别有$m_{a_0},m_{a_1},m_{b_0},m_{b_1},m_x$个质因子$p$<br>由于$gcd(a_0,x)=b_0$，所以有$3$种情况：</p>
<ol>
<li>若$m_{a_0}&gt;m_{b_0}$，则$m_x=m_{b_0}$</li>
<li>若$m_{a_0}=m_{b_0}$，则$m_x\geqslant m_{b_0}$</li>
<li>若$m_{a_0}&lt;m_{b_0}$，则$m_x$无解</li>
</ol>
<p>同理，由于$lcm(a_1,x)=b_1$，所以有$3$种情况：</p>
<ol>
<li>若$m_{a_1}&lt;m_{b_1}$，则$m_x=m_{b_1}$</li>
<li>若$m_{a_1}=m_{b_1}$，则$m_x\leqslant m_{b_1}$</li>
<li>若$m_{a_1}&gt;m_{b_1}$，则$m_x$无解</li>
</ol>
<p>综合以上所有情况，我们可以得出共有$5$种情况：</p>
<ol>
<li>若$m_{a_0}&gt;m_{b_0},m_{a_1}&lt;m_{b_1},m_{b_0}=m_{b_1}$，则$m_x=m_{b_0}=m_{b_1}$</li>
<li>若$m_{a_0}&gt;m_{b_0},m_{a_1}=m_{b_1},m_{b_0}\leqslant m_{b_1}$，则$m_x=m_{b_0}$</li>
<li>若$m_{a_0}=m_{b_0},m_{a_1}&lt;m_{b_1},m_{b_0}\leqslant m_{b_1}$，则$m_x=m_{b_1}$</li>
<li>若$m_{a_0}=m_{b_0},m_{a_1}=m_{b_1},m_{b_0}\leqslant m_{b_1}$，则$m_{b_0}\leqslant m_x\leqslant m_{b_1}$</li>
<li>若其他情况，则$m_x$均无解</li>
</ol>
<p>我们将$m_x$的取法记为$sum_p$，则$x$的数量为$\prod\limits_{\text{质数}p|d}sum_p$，时间复杂度$\Theta\left(\frac{n\sqrt{d}}{lnd}\right)$</p>
<h2 id="POJ3696-The-Luckiest-number"><a href="#POJ3696-The-Luckiest-number" class="headerlink" title="POJ3696 The Luckiest number"></a>POJ3696 The Luckiest number</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><h4 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h4><p><strong><a href="http://poj.org/problem?id=3696" target="_blank" rel="noopener">原题</a></strong></p>
<h5 id="英文题目-1"><a href="#英文题目-1" class="headerlink" title="英文题目"></a>英文题目</h5><p>Chinese people think of ‘$8$’ as the lucky digit. Bob also likes digit ‘$8$’. Moreover, Bob has his own lucky number $L$. Now he wants to construct his luckiest number which is the minimum among all positive integers that are a multiple of $L$ and consist of only digit ‘$8$’.</p>
<h5 id="中文题意-1"><a href="#中文题意-1" class="headerlink" title="中文题意"></a>中文题意</h5><p>给定一个正整数$L$($L\leqslant 2\times10^9$)<br>问至少有多少个$8$连在一起组成的正整数是$L$的倍数</p>
<h4 id="输入输出格式-2"><a href="#输入输出格式-2" class="headerlink" title="输入输出格式"></a>输入输出格式</h4><h5 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h5><p>每行一个正整数$L$($L\leqslant 2\times10^9$)</p>
<h5 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h5><p>对于每个$L$，输出至少有多少个$8$连在一起组成的正整数是$L$的倍数，格式参照样例。若不存在，输出$0$</p>
<h4 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入样例-2"><a href="#输入样例-2" class="headerlink" title="输入样例"></a>输入样例</h5><p>8<br>11<br>16<br>0</p>
<h5 id="输出样例-2"><a href="#输出样例-2" class="headerlink" title="输出样例"></a>输出样例</h5><p>Case 1: 1<br>Case 2: 2<br>Case 3: 0</p>
<h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>$n$个$8$连在一起组成的正整数可以记为$\frac{8}{9}(10^x-1)$<br>所以题目就转化为求最小的$x$使得$L|\frac{8}{9}(10^x-1)$<br>设$d=gcd(L,8)$<br>$L|\frac{8}{9}(10^x-1)\iff9L|8(10^x-1)\iff\frac{9L}{d}|10^x-1\iff10^x\equiv1\pmod{\frac{9L}{d}}$<br>这题的关键在于一个结论：若正整数$a,n$互质，则满足$a^x\equiv1\pmod{n}$的最小整数$x_0$为$\varphi(n)$的约数<br>证明：<br>假设满足$a^x\equiv1\pmod{n}$的最小整数$x_0$不能整除$\varphi(n)$<br>设$\varphi(n)=qx_0+r(0\leqslant r&lt;x_0)$<br>$\because a^{x_0}\equiv1\pmod{n}$<br>$\therefore a^{qx_0}\equiv1\pmod{n}$<br>又$\because a^{\varphi(n)}\equiv1\pmod{n}$（欧拉定理）<br>$\therefore a^{r}\equiv1\pmod{n}$，与$x_0$最小矛盾！<br>$\therefore$假设不成立，原命题成立</p>
<p>所以，我们只需要求出$\varphi(\frac{9L}{d})$，时间复杂度$\Theta(\sqrt{L}lnL)$</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>数论的练习题还有很多，在这里就不一一细细分析了，推荐几道题目供大家练习</p>
<ol>
<li><a href="https://www.luogu.org/problem/P1463" target="_blank" rel="noopener">洛谷P1463反素数</a> <a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1053" target="_blank" rel="noopener">双倍经验：BZOJ1053</a></li>
<li><a href="https://www.luogu.org/problem/P2261" target="_blank" rel="noopener">洛谷P2261余数求和</a> <a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1257" target="_blank" rel="noopener">双倍经验：BZOJ1257</a></li>
<li><a href="http://poj.org/problem?id=3090" target="_blank" rel="noopener">POJ3090Visible Lattice Points</a>这题洛谷上好像有原题，只是名字改了，有知道题号的可以跟我说</li>
<li><a href="https://www.luogu.org/problem/P1082" target="_blank" rel="noopener">洛谷P1082同余方程</a></li>
<li><a href="http://poj.org/problem?id=3070" target="_blank" rel="noopener">POJ2891Strange Way to Express Integers</a></li>
<li><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2818" target="_blank" rel="noopener">BZOJ1257Gcd</a></li>
<li><a href="http://poj.org/problem?id=2480" target="_blank" rel="noopener">POJ2480Longge’s problem</a></li>
<li><a href="https://www.luogu.org/problem/P1516" target="_blank" rel="noopener">洛谷P1516青蛙的约会</a> <a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1477" target="_blank" rel="noopener">双倍经验：BZOJ1447</a> <a href="http://poj.org/problem?id=1061" target="_blank" rel="noopener">三倍经验！！！POJ1061</a></li>
<li><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=2242" target="_blank" rel="noopener">BZOJ2242计算器</a></li>
</ol>
<p><strong>参考材料：</strong><br><strong>1、《算法竞赛进阶指南》李煜东 著</strong><br><strong>2、《数论初步》周春荔 著</strong><br><strong>3、《简明数论》潘承洞、潘承彪 著</strong></p>
<p><strong>ps:写得比较匆忙，有错误请在评论区指出，我将及时更改，谢谢！</strong></p>
]]></content>
      <categories>
        <category>数学&amp;信息竞赛</category>
      </categories>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷P1072 Hankson的趣味题</title>
    <url>/2019/07/31/%E6%B4%9B%E8%B0%B7P1072%20Hankson%E7%9A%84%E8%B6%A3%E5%91%B3%E9%A2%98/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><strong><a href="https://www.luogu.org/problem/P1072" target="_blank" rel="noopener">原题</a></strong></p>
<a id="more"></a>

<p>Hanks博士是 BT(Bio-Tech，生物技术)领域的知名专家，他的儿子名叫Hankson。现在，刚刚放学回家的Hankson正在思考一个有趣的问题。<br>今天在课堂上，老师讲解了如何求两个正整数$c_1$和$c_2$的最大公约数和最小公倍数。现在Hankson认为自己已经熟练地掌握了这些知识，他开始思考一个“求公约数”和“求公倍数”之类问题的“逆问题”，这个问题是这样的：已知正整数$a_0,a_1,b_0,b_1$，设某未知正整数$x$满足：<br>1.$x$和 $a_0$的最大公约数是$a_1$；<br>2.$x$和$b_0$的最小公倍数是$b_1$。<br>Hankson的“逆问题”就是求出满足条件的正整数$x$。但稍加思索之后，他发现这样的$x$并不唯一，甚至可能不存在。因此他转而开始考虑如何求解满足条件的$x$的个数。请你帮助他编程求解这个问题。</p>
<h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行为一个正整数$n$，表示有$n$组输入数据。接下来的$n$行每行一组输入数据，为四个正整数 $a_0,a_1,b_0,b_1$​，每两个整数之间用一个空格隔开。输入数据保证$a_0$能被$a_1$整除，$b_1$能被$b_0$​整除。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>共$n$行。每组输入数据的输出结果占一行，为一个整数。<br>对于每组数据：若不存在这样的$x$，请输出$0$；<br>若存在这样的$x$，请输出满足条件的$x$的个数；</p>
<h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><p>2<br>41 1 96 288<br>95 1 37 1776 </p>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><p>6<br>2</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>因为$x$是$b_1$的约数，所以$x$的质因子一定也是$b_1$的质因子，所以我对于$b_1$的每个质因子$p$，我们可以计算$x$中有多少个$p$<br>假设$a_0,a_1,b_0,b_1,x$中分别有$m_{a_0},m_{a_1},m_{b_0},m_{b_1},m_x$个质因子$p$<br>由于$gcd(a_0,x)=b_0$，所以有$3$种情况：</p>
<ol>
<li>若$m_{a_0}&gt;m_{b_0}$，则$m_x=m_{b_0}$</li>
<li>若$m_{a_0}=m_{b_0}$，则$m_x\geqslant m_{b_0}$</li>
<li>若$m_{a_0}&lt;m_{b_0}$，则$m_x$无解</li>
</ol>
<p>同理，由于$lcm(a_1,x)=b_1$，所以有$3$种情况：</p>
<ol>
<li>若$m_{a_1}&lt;m_{b_1}$，则$m_x=m_{b_1}$</li>
<li>若$m_{a_1}=m_{b_1}$，则$m_x\leqslant m_{b_1}$</li>
<li>若$m_{a_1}&gt;m_{b_1}$，则$m_x$无解</li>
</ol>
<p>综合以上所有情况，我们可以得出共有$5$种情况：</p>
<ol>
<li>若$m_{a_0}&gt;m_{b_0},m_{a_1}&lt;m_{b_1},m_{b_0}=m_{b_1}$，则$m_x=m_{b_0}=m_{b_1}$</li>
<li>若$m_{a_0}&gt;m_{b_0},m_{a_1}=m_{b_1},m_{b_0}\leqslant m_{b_1}$，则$m_x=m_{b_0}$</li>
<li>若$m_{a_0}=m_{b_0},m_{a_1}&lt;m_{b_1},m_{b_0}\leqslant m_{b_1}$，则$m_x=m_{b_1}$</li>
<li>若$m_{a_0}=m_{b_0},m_{a_1}=m_{b_1},m_{b_0}\leqslant m_{b_1}$，则$m_{b_0}\leqslant m_x\leqslant m_{b_1}$</li>
<li>若其他情况，则$m_x$均无解</li>
</ol>
<p>我们将$m_x$的取法记为$sum_p$，则$x$的数量为$\prod\limits_{\text{质数}p|d}sum_p$<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,a0,a1,b0,b1,ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (<span class="keyword">long</span> <span class="keyword">long</span>)a*b/gcd(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">  <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">    ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;a0,&amp;a1,&amp;b0,&amp;b1);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">sqrt</span>(b1);i++)</span><br><span class="line">    <span class="keyword">if</span>(b1%i==<span class="number">0</span>)&#123;</span><br><span class="line">  		<span class="keyword">if</span>(gcd(i,a0)==a1&amp;&amp;lcm(i,b0)==b1) ans++;</span><br><span class="line">      <span class="keyword">if</span>(i*i!=b1) <span class="keyword">if</span>(gcd(b1/i,a0)==a1&amp;&amp;lcm(b1/i,b0)==b1) ans++;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>信息竞赛</category>
      </categories>
      <tags>
        <tag>题解</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>矢量（向量）</title>
    <url>/2019/07/30/%E7%9F%A2%E9%87%8F%EF%BC%88%E5%90%91%E9%87%8F%EF%BC%89/</url>
    <content><![CDATA[<h2 id="1、矢量的定义"><a href="#1、矢量的定义" class="headerlink" title="1、矢量的定义"></a>1、矢量的定义</h2><p>矢量是一种既有大小又有方向的量，又称为向量。在计算机中，矢量图可以无限放大永不变形 <del>（反正我没看懂）</del>。——百度百科</p>
<a id="more"></a>

<h2 id="2、矢量的表示及其相关量的表示"><a href="#2、矢量的表示及其相关量的表示" class="headerlink" title="2、矢量的表示及其相关量的表示"></a>2、矢量的表示及其相关量的表示</h2><h3 id="1-矢量的表示"><a href="#1-矢量的表示" class="headerlink" title="(1)矢量的表示"></a>(1)矢量的表示</h3><p>矢量可以表示为一个小写字母$a$上面一个箭头$\vec{a}$（ps:正确的箭头应该是$\rightharpoonup$这样的，而不是$\rightarrow$的，但$L_{A}T^{E}X$上打不出来）或者一个粗体 <strong>A</strong><br>在$n$维空间内，矢量通常被表示为一个$n$元组$(a_{1},a_{2},\cdots \cdots,a_{n})$</p>
<h3 id="2-矢量夹角的表示"><a href="#2-矢量夹角的表示" class="headerlink" title="(2)矢量夹角的表示"></a>(2)矢量夹角的表示</h3><p>两个矢量$\vec{a},\vec{b}$的夹角表示为$\langle\vec{a},\vec{b}\rangle$</p>
<h2 id="3、矢量的运算"><a href="#3、矢量的运算" class="headerlink" title="3、矢量的运算"></a>3、矢量的运算</h2><h2 id="1-矢量的模"><a href="#1-矢量的模" class="headerlink" title="(1)矢量的模"></a>(1)矢量的模</h2><p>即矢量的长度，记为$|\vec{a}|$</p>
<h3 id="2-矢量的加法"><a href="#2-矢量的加法" class="headerlink" title="(2)矢量的加法"></a>(2)矢量的加法</h3><p>满足三角形法则，如图<br><img src="https://img-blog.csdnimg.cn/20190719195643588.png" alt=""></p>
<h3 id="3-矢量的减法"><a href="#3-矢量的减法" class="headerlink" title="(3)矢量的减法"></a>(3)矢量的减法</h3><p>满足平行四边形法则，如图<br><img src="https://img-blog.csdnimg.cn/20190719195730190.png" alt="在这里插入图片描述"></p>
<h3 id="4-矢量的点乘"><a href="#4-矢量的点乘" class="headerlink" title="(4)矢量的点乘"></a>(4)矢量的点乘</h3><p>两个矢量的点乘是标量，$(a_{1},a_{2},\cdots\cdots,a_{n})\cdot(b_{1},b_{2},\cdots\cdots,b_{n})\overset{\underset{def}{}}{=}\sum \limits_{i=1}^{n}a_{i}b_{i},\vec{a}\cdot\vec{b}=|\vec{a}||\vec{b}|cos(\langle\vec{a},\vec{b}\rangle)$<br>这时，我们终于可以给出矢量的模的表达式了$|\vec{a}|\overset{\underset{def}{}}{=}\sqrt{(\vec{a})^2}$<br>点乘满足交换律和分配律</p>
<h3 id="5-矢量的叉乘"><a href="#5-矢量的叉乘" class="headerlink" title="(5)矢量的叉乘"></a>(5)矢量的叉乘</h3><p>有$0.999999994538$的概率我们不考虑矢量的叉乘后的结果，我们只考虑矢量的叉乘后矢量的模<br>$(a_{1},a_{2})\times(b_{1},b_{2})\overset{\underset{def}{}}{=}a_{1}b_{2}-a_{2}b_{1},\vec{a}\times\vec{b}=|\vec{a}||\vec{b}|sin(\langle\vec{a},\vec{b}\rangle)$<br>矢量的叉乘的本质的有向面积，它的方向满足右手螺旋法则：先把手掌除大拇指以外的$4$个指头展开，指向$\vec{a}$的方向，然后把$4$个指头弯起来，弯的方向由$\vec{a}$转向矢量$\vec{b}$（转的角度须小于$\pi$），此时大拇指立起的方向，就是$\vec{a}\times\vec{b}$的方向。<br>矢量的叉乘满足逆交换律，即$\vec{a}\times\vec{b}=-\vec{b}\times\vec{a}$</p>
<h3 id="6-矢量的极角"><a href="#6-矢量的极角" class="headerlink" title="(6)矢量的极角"></a>(6)矢量的极角</h3><p>向量$\vec{a}$的极角$\theta$为$atan2(y,x)$</p>
<h2 id="4、矢量的变换"><a href="#4、矢量的变换" class="headerlink" title="4、矢量的变换"></a>4、矢量的变换</h2><h3 id="1-缩放"><a href="#1-缩放" class="headerlink" title="(1)缩放"></a>(1)缩放</h3><p>$\vec{a}$方向的单位矢量（即长度为1的矢量）为$\frac{\vec{a}}{|a|}$<br>与$\vec{a}$同向但长度为$l$的矢量为</p>
<h3 id="2-平移"><a href="#2-平移" class="headerlink" title="(2)平移"></a>(2)平移</h3><p>平移后的矢量和平移前的矢量是同一个向量</p>
<h3 id="3-旋转"><a href="#3-旋转" class="headerlink" title="(3)旋转"></a>(3)旋转</h3><p>矢量$\vec{a}=(x,y)$逆时针旋转$\theta$，得到的矢量$\vec{a’}=(xcos\theta-ysin\theta,ycos\theta+xsin\theta)$</p>
<h3 id="4-投影"><a href="#4-投影" class="headerlink" title="(4)投影"></a>(4)投影</h3><p>矢量$\vec{b}$在矢量$\vec{a}$上的投影为$\vec{a}\frac{\vec{a}\cdot\vec{b}}{\vec{a}^2}$</p>
<h3 id="5-对称"><a href="#5-对称" class="headerlink" title="(5)对称"></a>(5)对称</h3><p>记矢量$\vec{b}$在矢量$\vec{a}$上的投影为$\vec{c}=\vec{a}\frac{\vec{a}\cdot\vec{b}}{\vec{a}^2}$，则矢量$\vec{b}$关于矢量$\vec{a}$的对称为$\vec{b}-2(\vec{b}-\vec{s})=2\vec{a}\frac{\vec{a}\cdot\vec{b}}{\vec{a}^2}=\vec{b}$</p>
]]></content>
      <categories>
        <category>数学&amp;物理&amp;信息竞赛</category>
      </categories>
      <tags>
        <tag>矢量</tag>
      </tags>
  </entry>
  <entry>
    <title>微积分基础之图形面积（体积）计算</title>
    <url>/2019/07/29/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9F%BA%E7%A1%80%E4%B9%8B%E5%9B%BE%E5%BD%A2%E9%9D%A2%E7%A7%AF%EF%BC%88%E4%BD%93%E7%A7%AF%EF%BC%89%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<h1 id="一、平面图形面积"><a href="#一、平面图形面积" class="headerlink" title="一、平面图形面积"></a>一、平面图形面积</h1><p>$$\boxed{积分的要领1：以长方形为基础来思考}$$</p>
<a id="more"></a>

<h2 id="1、简单图形的面积"><a href="#1、简单图形的面积" class="headerlink" title="1、简单图形的面积"></a>1、简单图形的面积</h2><h3 id="1-长方形"><a href="#1-长方形" class="headerlink" title="(1)长方形"></a>(1)长方形</h3><p>长$\times$宽，<del>不会的请离开</del></p>
<h3 id="2-三角形"><a href="#2-三角形" class="headerlink" title="(2)三角形"></a>(2)三角形</h3><p>底$\times$高/2，<del>不会的请离开</del></p>
<h3 id="3-平行四边形"><a href="#3-平行四边形" class="headerlink" title="(3)平行四边形"></a>(3)平行四边形</h3><p>底$\times$高，<del>不会的请离开</del></p>
<h3 id="4-梯形"><a href="#4-梯形" class="headerlink" title="(4)梯形"></a>(4)梯形</h3><p>$($上底$+$下底$)\times$高/2，<del>不会的请离开</del></p>
<h3 id="2、稍微复杂一点的图形面积"><a href="#2、稍微复杂一点的图形面积" class="headerlink" title="2、稍微复杂一点的图形面积"></a>2、稍微复杂一点的图形面积</h3><p>$$\boxed{积分的要领2：把图形看作小长方形的组合}$$</p>
<h3 id="1-圆"><a href="#1-圆" class="headerlink" title="(1)圆"></a>(1)圆</h3><h4 id="法1："><a href="#法1：" class="headerlink" title="法1："></a>法1：</h4><p>用圆规在方格纸上画一个圆，接着数一数圆中的方格数<br>我在边长为$1mm$的方格纸上画了一个半径为$2cm$的圆，我算(shǔ)出圆中共有$1189$个格子，所以我们算出的圆周率是$2.9725$<br>虽然这个误差很大，但是，随着格子边长的缩小，我们的准确度就越高</p>
<h4 id="法2："><a href="#法2：" class="headerlink" title="法2："></a>法2：</h4><p>有什么办法可以提高精度吗？有，如图，我们把圆分成细长的小条来求<del>由于我太懒了，所以只画了3条</del><br><img src="https://img-blog.csdnimg.cn/20190728100923496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg0OTQ4OA==,size_16,color_FFFFFF,t_70" alt=""><br>每一个小条的宽度是$\Delta x$，表示非常小的数值<br>这样，我们可以得出圆的面积$=\int_{左端}^{右端}短条在x值对应的长度dx$<br>$dx$可以理解为$\lim \limits_{\Delta x \rightarrow 0}\Delta x$<br>我做了一个实验，计算半径为$1cm$的圆，把它分成$N$个小条，制成一张表格<br>|$N$|所有小条的总面积|<br>|–|–|<br>|$10$|$2.637049$|<br>|$20$|$2.904518$|<br>|$40$|$3.028465$|<br>|$200$|$3.120417$|<br>|$2000$|$3.139555$|<br>|$20000$|$3.141391$|<br>可见$N$越来越大时，小条的总面积就会越接近圆的面积$\pi r^{2}$</p>
<h3 id="椭圆"><a href="#椭圆" class="headerlink" title="椭圆"></a>椭圆</h3><p>椭圆是由圆拉伸来的，所以我们也可以把它分成细长的短条来求，这个小条的面积就是圆的小条面积的$\frac{a}{b}$倍，所以，椭圆的面积就是$\pi ab$<br>$$\boxed{积分的要领3：把图形分解成长方形然后进行伸缩变换}$$<br><img src="https://img-blog.csdnimg.cn/20190728103006934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg0OTQ4OA==,size_16,color_FFFFFF,t_70" alt=""></p>
<h1 id="立体图形表面积和体积"><a href="#立体图形表面积和体积" class="headerlink" title="立体图形表面积和体积"></a>立体图形表面积和体积</h1><h2 id="祖暅定理"><a href="#祖暅定理" class="headerlink" title="祖暅定理"></a>祖暅定理</h2><p>$$\boxed{积分的要领4：把图形看作被切割后的组合}$$<br>在外国称作卡瓦列利原理<br>截面面积总是相等的两个立体图形，体积也相等</p>
<h2 id="三分之一之谜"><a href="#三分之一之谜" class="headerlink" title="三分之一之谜"></a>三分之一之谜</h2><p>$$\boxed{积分的要领5：灵活应用祖暅定理}$$<br>大家都知道圆锥的体积公式吧？体积$=$底面积$\times$高$\times\frac{1}{3}$<br>话说这个$\frac{1}{3}$是哪来的？<br>首先，我们从四棱锥说起<br>我们先把C点平移到A的正上方，使得$AC\perp$平面$ABD$（祖暅定理）<br><img src="https://img-blog.csdnimg.cn/20190729110729838.png" alt=""><br>$\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \Downarrow$<br><img src="https://img-blog.csdnimg.cn/20190729111056314.png" alt=""><br>这时，我们发现3个这样的椎体可以拼成一个长方形，因此，我们可以得到这个四棱锥的体积就是$\frac{1}{3}\times$底面积$\times$高<br>得到了四棱锥的体积之后，我们就可以计算任意椎体的体积了<br>我们把椎体的底面分成许多很小的长方形，所以每一个小四棱锥的体积相加就是椎体的体积了，也就等于$\frac{1}{3}\times$底面积$\times$高</p>
<h2 id="球的体积"><a href="#球的体积" class="headerlink" title="球的体积"></a>球的体积</h2><p>我们先做出一个立体图形，我把它称为钵体，它是一个圆柱再去掉一个圆锥后的图形<br><img src="https://img-blog.csdnimg.cn/20190729113104741.png" alt=""><br>我们可以发现，它的每一个截面的面积和一个半球上的截面的面积相同，所以，根据祖暅定理，我们可以知道，球的体积$=2\times\frac{2}{3}\pi R^3=\times\frac{4}{3}\pi R^3$<br>$$\boxed{积分的要领6：寻找“有效的对应、关系条件”}$$</p>
<h2 id="球的表面积"><a href="#球的表面积" class="headerlink" title="球的表面积"></a>球的表面积</h2><p>$$\boxed{积分的要领7：相比“纠结于细节”，“如何思考才能顺利计算”更优先}$$<br>我们把球的表面分成许多小的四棱锥，所以，我们可以得到球的体积$=\frac{1}{3}\times R\times$球的表面积<br>所以，我们可以得到球的表面积$=4\pi R^2$</p>
<h1 id="终极问题——甜甜圈的体积"><a href="#终极问题——甜甜圈的体积" class="headerlink" title="终极问题——甜甜圈的体积"></a>终极问题——甜甜圈的体积</h1><p>大家都知道甜甜圈吧？<br><img src="https://img-blog.csdnimg.cn/2019072912252495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg0OTQ4OA==,size_16,color_FFFFFF,t_70" alt=""><br>我用软件画了一个甜甜圈，我们假设甜甜圈边上的圆心到中心的距离为$4cm$，半径为$2cm$，我们尝试水平切割，我们就可以得到一个个圆环<br>这些圆环的外圈的半径$=4+\sqrt{4-x^2}$，内圈的半径$=4-\sqrt{4-x^2}$，所以这个截面的面积$=16\pi\sqrt{4-x^2}$（$x$代表到圆心的距离）<br>由此，我们就可以表示出整个甜甜圈的体积就是$\int_{-2}^{2}16\pi\sqrt{4-x^2}dx$这个积分是在不需要我们计算，我们只要画一个图就行了<br><img src="https://img-blog.csdnimg.cn/20190729123434408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzg0OTQ4OA==,size_16,color_FFFFFF,t_70" alt=""><br>积分相当于计算这个图形的面积，所以也就是$\int_{-2}^{2}16\pi\sqrt{4-x^2}dx=16\pi\times2\pi=32\pi^{2}$</p>
<p><strong>参考材料：</strong><br><strong>《简单微积分》神永正博 著</strong></p>
]]></content>
      <categories>
        <category>物理&amp;信息竞赛</category>
      </categories>
      <tags>
        <tag>微积分</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷P2894[USACO08FEB]酒店Hotel题解</title>
    <url>/2019/07/27/%E6%B4%9B%E8%B0%B7P2894%5BUSACO08FEB%5D%E9%85%92%E5%BA%97Hotel%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><strong><a href="https://www.luogu.org/problemnew/show/P2894" target="_blank" rel="noopener">原题</a></strong></p>
<a id="more"></a>

<p>奶牛们最近的旅游计划，是到苏必利尔湖畔，享受那里的湖光山色，以及明媚的阳光。作为整个旅游的策划者和负责人，贝茜选择在湖边的一家著名的旅馆住宿。这个巨大的旅馆一共有$N (1 \leqslant N \leqslant 50000)$间客房，它们在同一层楼中顺次一字排开，在任何一个房间里，只需要拉开窗帘，就能见到波光粼粼的湖面。<br>贝茜一行，以及其他慕名而来的旅游者，都是一批批地来到旅馆的服务台，希望能订到$D_{i} (1 \leqslant D_{i} \leqslant N)$间连续的房间。<br>服务台的接待工作也很简单：如果存在r满足编号为$r \cdots \cdots r+D_{i}-1$的房间均空着，他就将这一批顾客安排到这些房间入住；如果没有满足条件的r，他会道歉说没有足够的空房间，请顾客们另找一家宾馆。如果有多个满足条件的r，服务员会选择其中最小的一个。 旅馆中的退房服务也是批量进行的。每一个退房请求由$2$个数字$X_{i}、D_{i}$描述，表示编号为$X_{i} \cdots \cdots X_{i}+D_{i}-1 (1 \leqslant X_{i} \leqslant N-D_{i}+1)$房间中的客人全部离开。退房前，请求退掉的房间中的一些，甚至是所有，可能本来就无人入住。<br>而你的工作，就是写一个程序，帮服务员为旅客安排房间。你的程序一共需要处理$M (1 \leqslant M &lt; 50000)$个按输入次序到来的住店或退房的请求。第一个请求到来前，旅店中所有房间都是空闲的。</p>
<h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第$1$行: $2$个用空格隔开的整数$N$和$M$<br>第$2 \cdots \cdots M+1$行:第$i+1$描述了第$i$个请求，如果它是一个订房请求，则用$2$个数字$1$和$D_{i}$描述，数字间用空格隔开；如果它是一个退房请求，用$3$个以空格隔开的数字$2$、$X_{i}$和$D_{i}$描述</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每个订房请求，输出$1$个数：如果请求能被满足，输出满足条件的最小的$r$；如果请求无法被满足，输出$0$</p>
<h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><p>10 6<br>1 3<br>1 3<br>1 3<br>1 3<br>2 5 5<br>1 6</p>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><p>1<br>4<br>7<br>0<br>5</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>首先，我们先将题目简化一下，这道题需要我们实现$2$个操作：<br>1、订房:相当于查询是否有连续$D$个位置是空的，如果有输出最左端点<br>2、退房:相当于将$X$到$X+D-1$这段位置置为空<br>因此，我们很容易看出，这是一道支持区间查询和区间修改的线段树题。<br>要解决这个问题，每个节点都需要维护$4$个变量：<br>1、$lm$从左数最多有多少个连续的$0$<br>2、$rm$从右数最多有多少个连续的$0$<br>3、$m$整个区间最多有多少个连续的$0$<br>4、$sum$区间的长度<br>（读者：什么！？不用延迟标记（俗称$lazy$标志）吗？）<br>（我：…延迟标记还要写在这里吗？区间修改不是肯定需要吗?）<br> 一开始，因为整个区间都是空的，所以我们将这些的值都赋为区间的长度。<br>当遇到一个查询的时候，就从根节点开始查询，为了保证最后得到的答案一定是靠左的，所以我们都先判断左边的连续$0$的个数是否大于我们需要的$D$，如果是就直接返回左端点，然后，用同样的方法判断判断中间和右边的部分。<br>当遇到修改的时候，就正常修改，只是在最后上传标志的时候会稍微复杂一点点，有几种情况需要判断。<br>最后，因为我们涉及了区间修改，所以每做一步操作都要下放标志<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l(i) t[i].l</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> r(i) t[i].r</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m(i) t[i].m</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lm(i) t[i].lm</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rm(i) t[i].rm</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sum(i) t[i].sum</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> add(i) t[i].add</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ppap</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">int</span> l,r,m,lm,rm,sum,add;</span><br><span class="line">&#125;t[<span class="number">200010</span>];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> p)</span><span class="comment">//上传标志</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(sum(<span class="number">2</span>*p)==m(<span class="number">2</span>*p)) lm(p)=sum(<span class="number">2</span>*p)+lm(<span class="number">2</span>*p+<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">else</span> lm(p)=lm(<span class="number">2</span>*p);</span><br><span class="line">  <span class="keyword">if</span>(sum(<span class="number">2</span>*p+<span class="number">1</span>)==m(<span class="number">2</span>*p+<span class="number">1</span>)) rm(p)=sum(<span class="number">2</span>*p+<span class="number">1</span>)+rm(<span class="number">2</span>*p);</span><br><span class="line">  <span class="keyword">else</span> rm(p)=rm(<span class="number">2</span>*p+<span class="number">1</span>);</span><br><span class="line">  m(p)=max(m(<span class="number">2</span>*p),m(<span class="number">2</span>*p+<span class="number">1</span>));</span><br><span class="line">  m(p)=max(m(p),rm(<span class="number">2</span>*p)+lm(<span class="number">2</span>*p+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p)</span><span class="comment">//下放标志</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> add=add(p);</span><br><span class="line">  add(p)=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(l(p)==r(p)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(add==<span class="number">1</span>)&#123;</span><br><span class="line">    lm(<span class="number">2</span>*p)=rm(<span class="number">2</span>*p)=m(<span class="number">2</span>*p)=sum(<span class="number">2</span>*p);</span><br><span class="line">    lm(<span class="number">2</span>*p+<span class="number">1</span>)=rm(<span class="number">2</span>*p+<span class="number">1</span>)=m(<span class="number">2</span>*p+<span class="number">1</span>)=sum(<span class="number">2</span>*p+<span class="number">1</span>);</span><br><span class="line">    add(<span class="number">2</span>*p)=add(<span class="number">2</span>*p+<span class="number">1</span>)=<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(add==<span class="number">2</span>)&#123;</span><br><span class="line">    lm(<span class="number">2</span>*p)=rm(<span class="number">2</span>*p)=m(<span class="number">2</span>*p)=<span class="number">0</span>;</span><br><span class="line">    lm(<span class="number">2</span>*p+<span class="number">1</span>)=rm(<span class="number">2</span>*p+<span class="number">1</span>)=m(<span class="number">2</span>*p+<span class="number">1</span>)=<span class="number">0</span>;</span><br><span class="line">    add(<span class="number">2</span>*p)=add(<span class="number">2</span>*p+<span class="number">1</span>)=<span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span><span class="comment">//建树 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  l(p)=l;</span><br><span class="line">  r(p)=r;</span><br><span class="line">  lm(p)=rm(p)=m(p)=sum(p)=r-l+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(l==r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  build(<span class="number">2</span>*p,l,mid);</span><br><span class="line">  build(<span class="number">2</span>*p+<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> f)</span><span class="comment">//区间修改 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  pushdown(p);</span><br><span class="line">  <span class="keyword">int</span> l=l(p),r=r(p);</span><br><span class="line">  <span class="keyword">if</span>(l==x&amp;&amp;y==r)&#123;</span><br><span class="line">    <span class="keyword">if</span>(f==<span class="number">1</span>) lm(p)=rm(p)=m(p)=sum(p);</span><br><span class="line">    <span class="keyword">else</span> lm(p)=rm(p)=m(p)=<span class="number">0</span>;</span><br><span class="line">    add(p)=f;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(mid&gt;=y) change(<span class="number">2</span>*p,x,y,f);</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;x) change(<span class="number">2</span>*p+<span class="number">1</span>,x,y,f);</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    change(<span class="number">2</span>*p,x,mid,f);</span><br><span class="line">    change(<span class="number">2</span>*p+<span class="number">1</span>,mid+<span class="number">1</span>,y,f);</span><br><span class="line">  &#125;</span><br><span class="line">  pushup(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> x)</span><span class="comment">//区间查询 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  pushdown(p);</span><br><span class="line">  <span class="keyword">int</span> l=l(p),r=r(p),mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(l==r) <span class="keyword">return</span> l;</span><br><span class="line">  <span class="keyword">if</span>(m(<span class="number">2</span>*p)&gt;=x) <span class="keyword">return</span> ask(<span class="number">2</span>*p,x);</span><br><span class="line">  <span class="keyword">if</span>(rm(<span class="number">2</span>*p)+lm(<span class="number">2</span>*p+<span class="number">1</span>)&gt;=x) <span class="keyword">return</span> mid-rm(<span class="number">2</span>*p)+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> ask(<span class="number">2</span>*p+<span class="number">1</span>,x);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">  build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> f,x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;f);</span><br><span class="line">    <span class="keyword">if</span>(f==<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">      <span class="keyword">if</span>(t[<span class="number">1</span>].m&lt;x) <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p=ask(<span class="number">1</span>,x);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        change(<span class="number">1</span>,p,p+x<span class="number">-1</span>,<span class="number">2</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">      change(<span class="number">1</span>,x,x+y<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>信息竞赛</category>
      </categories>
      <tags>
        <tag>题解</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷P2120仓库建设题解</title>
    <url>/2019/07/27/%E6%B4%9B%E8%B0%B7P2120%E4%BB%93%E5%BA%93%E5%BB%BA%E8%AE%BE%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><strong><a href="https://www.luogu.org/problemnew/show/P2120" target="_blank" rel="noopener">原题</a></strong></p>
<a id="more"></a>

<p>$L$公司有$N$个工厂，由高到底分布在一座山上。<br>工厂$1$在山顶，工厂$N$在山脚。 由于这座山处于高原内陆地区（干燥少雨），L公司一般把产品直接堆放在露天，以节省费用。<br>突然有一天，$L$公司的总裁$L$先生接到气象部门的电话，被告知三天之后将有一场暴雨，于是$L$先生决定紧急在某些工厂建立一些仓库以免产品被淋坏。<br>由于地形的不同，在不同工厂建立仓库的费用可能是不同的。第$i$个工厂目前已有成品$P_{i}$件，在第$i$个工厂位置建立仓库的费用是$C_{i}$。<br>对于没有建立仓库的工厂，其产品应被运往其他的仓库进行储藏，而由于$L$公司产品的对外销售处设置在山脚的工厂$N$，故产品只能往山下运（即只能运往编号更大的工厂的仓库），当然运送产品也是需要费用的，假设一件产品运送$1$个单位距离的费用是$1$。<br>假设建立的仓库容量都都是足够大的，可以容下所有的产品。你将得到以下数据：</p>
<ul>
<li>工厂$i$距离工厂$1$的距离$X_{i}$（其中$X_{1}=0$）;</li>
<li>工厂$i$目前已有成品数量$P_{i}$;</li>
<li>在工厂$i$建立仓库的费用$C_{i}$;</li>
</ul>
<p>请你帮助L公司寻找一个仓库建设的方案，使得总的费用（建造费用+运输费用）最小。</p>
<h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含一个整数$N$，表示工厂的个数。接下来$N$行每行包含两个整数$X_{i},P_{i},C_{i}$, 意义如题中所述。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>仅包含一个整数，为可以找到最优方案的费用。</p>
<h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><p>3<br>0 5 10<br>5 3 100<br>9 6 10</p>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><p>32</p>
<h2 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h2><p>在工厂$1$和工厂$3$建立仓库，建立费用为$10+10=20$，运输费用为$(9-5)*3=12$，总费用$32$。<br>如果仅在工厂$3$建立仓库，建立费用为$10$，运输费用为$(9-0)5+(9-5)3=57$，总费用$67$，不如前者优。</p>
<h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h2><p>对于20%的数据， $N \leqslant 500$；<br>对于40%的数据， $N \leqslant 10000$；<br>对于100%的数据， $N \leqslant 1000000$。 所有的$X_{i},P_{i},C_{i}$均在$32$位带符号整数以内，保证中间计算结果不超过$64$位带符号整数。</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>首先，这一道题是一道$DP$题，所以，我们先用普通的$DP$做一下这题。<br>假设$f_{i}$表示工厂$1$到$i$的最小总费用<br>令$sp_{i}=\sum \limits_{j=1}^{i} p_{j}$，$s_{i}=\sum \limits_{j=1}^{i} s_{j}p_{j}$<br>由于产品只能往山下运（即只能运往编号更大的工厂的仓库），所以当编号在区间$\left[l,r\right]$中的工厂只有一个仓库（即只有一个仓库在工厂$r$）时，这段区间的费用为$c_{r}+\sum \limits_{i=l}^{r} p_{i} \times \left(x_{r}-x_{i}\right)=c_{r}+x_{r} \times \left(sp_{r}-sp_{l-1}\right)-s_{r}+s_{l-1}$<br>所以，状态转移方程就是$f_{i}=\min \limits_{0 \leqslant j &lt; i} \left{f_{j}+x_{i} \times \left(sp_{i}-sp_{j}\right)-s_{i}+s_{j}\right}+c_{i}$<br>最终的结果是$f_{n}$<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,x[<span class="number">1000010</span>],c[<span class="number">1000010</span>],p[<span class="number">1000010</span>],sp[<span class="number">1000010</span>],s[<span class="number">1000010</span>],f[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">  sp[<span class="number">0</span>]=s[<span class="number">0</span>]=f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x[i]&gt;&gt;p[i]&gt;&gt;c[i];</span><br><span class="line">    sp[i]=sp[i<span class="number">-1</span>]+p[i],s[i]=s[i<span class="number">-1</span>]+x[i]*p[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> minf=<span class="number">9223372036854775807</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) minf=min(minf,f[j]+x[i]*(sp[i]-sp[j])-s[i]+s[j]);</span><br><span class="line">    f[i]=minf+c[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;f[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这种普通的$DP$的复杂度是$\Theta \left(n^{2}\right)$，只能得到55分，所以，我们需要优化一下程序。<br>假设我们在计算$f_{i}$，此时有两个决策$a,b$满足$a&gt;b$且$a$比$b$优，即$f_{a}+x_{i} \times \left(sp_{i}-sp_{a}\right)-s_{i}+s_{a}&lt;f_{b}+x_{i} \times \left(sp_{i}-sp_{b}\right)-s_{i}+s_{b}$化简得：<br>$f_{a}+s_{a}-f_{b}-s_{b}&lt;x_{i} \times \left(sp_{a}+sp_{b}\right)$<br>$\frac{f_{a}+s_{a}-f_{b}-s_{b}}{sp_{a}+sp_{b}}&lt;x_{i}$<br>所以我们可以维护一个单调队列，使得从队尾到队首，$\frac{f_{a+1}+s_{a+1}-f_{a}-s_{a}}{sp_{a+1}+sp_{a}}$递减，保证队首决策最优，并每次决策从队首转移即可<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,l,r,x[<span class="number">1000010</span>],c[<span class="number">1000010</span>],p[<span class="number">1000010</span>],sp[<span class="number">1000010</span>],s[<span class="number">1000010</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">1000010</span>],q[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;x[i]&gt;&gt;p[i]&gt;&gt;c[i];</span><br><span class="line">    s[i]=s[i<span class="number">-1</span>]+x[i]*p[i],sp[i]=sp[i<span class="number">-1</span>]+p[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r&amp;&amp;f[q[l+<span class="number">1</span>]]+s[q[l+<span class="number">1</span>]]-f[q[l]]-s[q[l]]&lt;x[i]*(sp[q[l+<span class="number">1</span>]]-sp[q[l]])) l++;</span><br><span class="line">    f[i]=f[q[l]]+c[i]+x[i]*(sp[i]-sp[q[l]])-s[i]+s[q[l]];</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r&amp;&amp;(f[q[r]]+s[q[r]]-f[q[r<span class="number">-1</span>]]-s[q[r<span class="number">-1</span>]])*(sp[i]-sp[q[r]])&gt;(f[i]+s[i]-f[q[r]]-s[q[r]])*(sp[q[r]]-sp[q[r<span class="number">-1</span>]])) r--;</span><br><span class="line">    q[++r]=i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;f[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为每个元素入队出队次数都是$\Theta \left(1\right)$的，且转移复杂度也是$\Theta \left(1\right)$，所以总复杂度为$\Theta \left(n\right)$。</p>
]]></content>
      <categories>
        <category>信息竞赛</category>
      </categories>
      <tags>
        <tag>题解</tag>
        <tag>DP</tag>
        <tag>斜率优化DP</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ2689 Prime Distance题解</title>
    <url>/2019/07/27/POJ2689%20Prime%20Distance%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><strong><a href="http://poj.org/problem?id=2689" target="_blank" rel="noopener">原题</a></strong></p>
<a id="more"></a>

<h3 id="英文题目"><a href="#英文题目" class="headerlink" title="英文题目"></a>英文题目</h3><p>The branch of mathematics called number theory is about properties of numbers. One of the areas that has captured the interest of number theoreticians for thousands of years is the question of primality. A prime number is a number that is has no proper factors (it is only evenly divisible by $1$ and itself). The first prime numbers are $2,3,5,7$ but they quickly become less frequent. One of the interesting questions is how dense they are in various ranges. Adjacent primes are two numbers that are both primes, but there are no other prime numbers between the adjacent primes. For example, $2,3$ are the only adjacent primes that are also adjacent numbers.<br>Your program is given $2$ numbers: $L$ and $U$ ($1 \leqslant L&lt; U \leqslant 2,147,483,647$), and you are to find the two adjacent primes $C1$ and $C2$ ($L \leqslant C1&lt; C2 \leqslant U$) that are closest (i.e. $C2-C1$ is the minimum). If there are other pairs that are the same distance apart, use the first pair. You are also to find the two adjacent primes $D1$ and $D2$ ($L \leqslant D1&lt; D2 \leqslant U$) where $D1$ and $D2$ are as distant from each other as possible (again choosing the first pair if there is a tie).</p>
<h3 id="中文题意"><a href="#中文题意" class="headerlink" title="中文题意"></a>中文题意</h3><p>给定两个整数$L,R$($1 \leqslant L&lt; R \leqslant 2,147,483,647$)，求闭区间 $\left[L,R\right]$中相邻两个质数的差的最小值和最大值是多少，分别输出这两对质数。</p>
<h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>每行两个整数$L,R$($1 \leqslant L&lt; R \leqslant 2,147,483,647,R-L \leqslant 10^6$)。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每个$L,R$，输出最小值和最大值，格式参照样例。若区间内无质数，输出”There are no adjacent primes.”。</p>
<h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><p>2 17<br>14 17</p>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><p>2,3 are closest, 7,11 are most distant.<br>There are no adjacent primes.</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>由于$L,R$的范围很大，所以埃氏筛法和欧拉筛法都无法生成$\left[1,R\right]$的所有质数。但是$R-L$的范围很小且任何一个合数$n$一定包含一个不超过$\sqrt{n}$的质因子，所以我们只需要用筛法求出$2,3,\cdots,\sqrt{n}$的所有质数。而对于每一个质数$p$，标记$i \times p \left(\left\lceil\frac{L}{p}\right\rceil \leqslant i \leqslant \left\lceil\frac{R}{p}\right\rceil\right)$为合数。标记完后，剩下的所有数就是$\left[L,R\right]$中的质数了。再两两比较，找出差最大和最小的就可以了。<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,i,j,t1,t2,x1,x2,y1,y2,l,r,a[<span class="number">100001</span>], b[<span class="number">1000001</span>];</span><br><span class="line"><span class="keyword">bool</span> v[<span class="number">1000001</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span><span class="comment">//筛出2~46340之间的质数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">memset</span>(v,<span class="number">1</span>,<span class="keyword">sizeof</span>(v));</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=<span class="number">46340</span>;i++) <span class="keyword">if</span>(v[i])&#123;</span><br><span class="line">    a[++n]=i;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;=<span class="number">46340</span>/i;j++) v[i*j]=<span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  prime();</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r)&#123;</span><br><span class="line">    <span class="built_in">memset</span>(v,<span class="number">1</span>,<span class="keyword">sizeof</span>(v));</span><br><span class="line">    <span class="keyword">if</span>(l==<span class="number">1</span>) v[<span class="number">0</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">for</span>(j=l/a[i];j&lt;=r/a[i];j++) <span class="keyword">if</span>(j&gt;<span class="number">1</span>) v[a[i]*j-l]=<span class="literal">false</span>;<span class="comment">//去除L~R中的合数</span></span><br><span class="line">    m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=l;i&lt;=r;i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(v[i-l]) b[++m]=i;<span class="comment">//存储L~R中的质数</span></span><br><span class="line">      <span class="keyword">if</span>(i==r) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t1=<span class="number">2147483647</span>;</span><br><span class="line">    t2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line">      j=b[i+<span class="number">1</span>]-b[i];</span><br><span class="line">      <span class="keyword">if</span>(j&lt;t1)&#123;</span><br><span class="line">        t1=j;</span><br><span class="line">        x1=b[i];</span><br><span class="line">        y1=b[i+<span class="number">1</span>];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(j&gt;t2)&#123;</span><br><span class="line">        t2=j;</span><br><span class="line">        x2=b[i];</span><br><span class="line">        y2=b[i+<span class="number">1</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="comment">//比较差的大小</span></span><br><span class="line">    <span class="keyword">if</span>(!t2) <span class="built_in">cout</span>&lt;&lt;<span class="string">"There are no adjacent primes."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;x1&lt;&lt;<span class="string">","</span>&lt;&lt;y1&lt;&lt;<span class="string">" are closest, "</span>&lt;&lt;x2&lt;&lt;<span class="string">","</span>&lt;&lt;y2&lt;&lt;<span class="string">" are most distant."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>信息竞赛</category>
      </categories>
      <tags>
        <tag>题解</tag>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷P1172安全逃离题解</title>
    <url>/2019/07/27/%E6%B4%9B%E8%B0%B7P1172%E5%AE%89%E5%85%A8%E9%80%83%E7%A6%BB%E9%A2%98%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><strong><a href="https://www.luogu.org/problemnew/show/P1172" target="_blank" rel="noopener">原题</a></strong></p>
<a id="more"></a>

<p>农夫john最近在研究如果发生重大事故，如何让农场里的奶牛逃离问题。他想要确信在紧急情况下，所有的奶牛都有一个安全逃离方案。因为在紧急情况下，奶牛们都会失去观察和判断能力，所以最近john一直在教奶牛们逃离的方法，他的方法很简单，就是任何时候都只向北方或东方逃离，北方是行坐标减1的方向，东方是列坐标加1的方向。奶牛们虽笨，不过这一点事关自己的生命，所以他们牢记在心，而且也一定会这么做。</p>
<p>当然也会出问题，奶牛们在逃离的方向上会横冲直撞，为了阻止奶牛之间互相冲撞造成伤害，john要求任何一个奶牛的逃离路线不能经过其它奶牛的初始位置。一个逃离方案是安全的如果它能够满足上面的要求，反之它就是不安全的。</p>
<p>奶牛们所在的土地（农场）被划分成了rr行和cc列的一个矩形地图。奶牛们都待在这个矩形中的某一个位置。</p>
<p>请帮助john确定给定的一个地图上是否存在一个安全的逃离方案。</p>
<p>比如，下面的两个图：</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4ubHVvZ3Uub3JnL3VwbG9hZC9waWMvNzI0MC5wbmc" alt=""></p>
<p>左边的例子表示了一个能够安全逃离的地图，因为没有任何一个奶牛的逃离路线上包括其他奶牛。右边的例子表示了一个不安全的地图，因为位于(4,1)(4,1)的奶牛不论是向东逃离还是向北逃离，它的路线上都会有别的奶牛，从这个图中拿掉任意一头奶牛，这个地图都会变成安全的。</p>
<h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第$1$行：两个整数$r,c$，用1个空格隔开，表示矩形的行数和列数（均 $\le 50$）。<br>第$2$行：一个整数$n$，表示奶牛的个数（$\le 100$）。<br>第$3$到$n+2$行：共$n$行，每行有$2$个整数，之间用$1$个空格隔开，分别表示这头奶牛所在的行和列。<br><strong>每输入完一行后，会输入多余的字符！！！</strong></p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>如果这块土地是安全的，输出$0$。<br>如果移走任意一头奶牛这块土地还是不安全，输出$-1$。<strong>否则输出移走的那头奶牛的编号，如果有多个奶牛满足要求，输出所有的数</strong>。</p>
<h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><p>5 5<br>5<br>1 1<br>2 4<br>3 1<br>2 2<br>2 1</p>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><p>1<br>5</p>
<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这一题的题目有问题（我在百度上查了，所有题目都是错的。多亏了洛谷的在线测评，把题解复制在上面执行，就可以知道题目错误了）。我整整研究了一天才研究出来。最后，我是在另一个人提交的AC程序上找出了我的错误。这个错误你根本是不可能想到的（虽然我不知道以前的人是怎么发现的），这个错误是就是<strong>我在题目中加粗的字</strong>其实这个问题我在一个OJ上也有注意到（那个OJ可以下载不完整的数据），但是我并不知道这是一个漏洞。<br>这道题的思路就是模拟，首先遍历所有的奶牛，若全部安全，则输出0，结束。如果不是全部安全的，则每次将一只奶牛删除，再遍历全部，看看是否全是安全的，如果是，则输出该奶牛编号，直到所有情况都遍历完了，再讨论-1的情况。<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m[<span class="number">51</span>][<span class="number">51</span>],h,l,n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cow</span>&#123;</span>     <span class="comment">//结构体，也可以用x[101]和y[101] </span></span><br><span class="line">  <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line">cow a[<span class="number">101</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">anquan</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;     <span class="comment">//每头奶牛安全的条件 </span></span><br><span class="line">  <span class="keyword">int</span> t1=<span class="number">1</span>,t2=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;x;i++) <span class="keyword">if</span>(m[i][y]) &#123;t1=<span class="number">0</span>;<span class="keyword">break</span>;&#125;     <span class="comment">//如果北面有奶牛，那么t1=0 </span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=y+<span class="number">1</span>;i&lt;=l;i++) <span class="keyword">if</span>(m[x][i]) &#123;t2=<span class="number">0</span>;<span class="keyword">break</span>;&#125;     <span class="comment">//如果东面有奶牛，那么t2=0 </span></span><br><span class="line">  <span class="keyword">if</span>(t1==<span class="number">0</span>&amp;&amp;t2==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>; <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;     <span class="comment">//如果两边都有奶牛，则不安全，反之安全 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qaq</span><span class="params">()</span></span>&#123;     <span class="comment">//所有奶牛都安全 </span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=h;i++) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=l;j++) <span class="keyword">if</span>(m[i][j]) <span class="keyword">if</span>(!(anquan(i,j))) <span class="keyword">return</span> <span class="number">0</span>;     <span class="comment">//遍历整个农场，如果有奶牛不安全，那么返回0 </span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;     <span class="comment">//否则返回1 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">aq</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;     <span class="comment">//去掉一只奶牛后安全</span></span><br><span class="line">  m[x][y]=<span class="number">0</span>;     <span class="comment">//删除奶牛</span></span><br><span class="line">  <span class="keyword">return</span> qaq();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;h&gt;&gt;l&gt;&gt;n;</span><br><span class="line">  <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));<span class="built_in">memset</span>(m,<span class="number">0</span>,<span class="keyword">sizeof</span>(m));     <span class="comment">//初始化 </span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a[i].x&gt;&gt;a[i].y;     <span class="comment">//输入 </span></span><br><span class="line">    m[a[i].x][a[i].y]=i;     <span class="comment">//也可以赋值为1 </span></span><br><span class="line">    gets(s);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(qaq()) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;     <span class="comment">//如果全部安全，输出0，结束 </span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(aq(a[i].x,a[i].y)) <span class="comment">/*如果去掉后安全*/</span><span class="keyword">if</span>(!temp) <span class="comment">/*如果是第一次输出*/</span><span class="built_in">cout</span>&lt;&lt;i,temp++; <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;i; </span><br><span class="line">    m[a[i].x][a[i].y]=i;     <span class="comment">//这步非常重要，不然第二次执行的时候就删除了两只奶牛 </span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(!temp) <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>;     <span class="comment">//如果删掉任何一只奶牛都不安全，输出-1 </span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>信息竞赛</category>
      </categories>
      <tags>
        <tag>题解</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Hexo</title>
    <url>/2019/07/25/Hello%20Hexo/</url>
    <content><![CDATA[<p>今天，我创建了Hexo博客。但我太弱了，希望各位大佬多多指教。</p>
]]></content>
  </entry>
</search>
